
---------- Begin Simulation Statistics ----------
simSeconds                                   0.050000                       # Number of seconds simulated (Second)
simTicks                                  50000000000                       # Number of ticks simulated (Tick)
finalTick                                2327900383436                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                   2689.27                       # Real time elapsed on the host (Second)
hostTickRate                                 18592423                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1884424                       # Number of bytes of host memory used (Byte)
simInsts                                    119137311                       # Number of instructions simulated (Count)
simOps                                      175528880                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                    44301                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                      65270                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.dptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.iptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.demandHits::processor.cores.core.data     45459392                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandHits::total     45459392                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::processor.cores.core.data     45459392                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::total     45459392                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::processor.cores.core.data      4693833                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::total      4693833                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::processor.cores.core.data      4693833                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::total      4693833                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::processor.cores.core.data 128443916599                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::total 128443916599                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::processor.cores.core.data 128443916599                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::total 128443916599                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::processor.cores.core.data     50153225                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::total     50153225                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::processor.cores.core.data     50153225                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::total     50153225                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::processor.cores.core.data     0.093590                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::total     0.093590                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::processor.cores.core.data     0.093590                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::total     0.093590                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::processor.cores.core.data 27364.398478                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::total 27364.398478                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::processor.cores.core.data 27364.398478                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::total 27364.398478                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_targets      1794654                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_targets        53665                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_targets    33.441796                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.writebacks::writebacks       918502                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.writebacks::total       918502                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::processor.cores.core.data      2250804                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::total      2250804                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::processor.cores.core.data      2250804                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::total      2250804                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::processor.cores.core.data      2443029                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::total      2443029                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::processor.cores.core.data      2443029                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::total      2443029                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::processor.cores.core.data  51217108045                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::total  51217108045                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::processor.cores.core.data  51217108045                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::total  51217108045                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::processor.cores.core.data     0.048711                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::total     0.048711                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::processor.cores.core.data     0.048711                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::total     0.048711                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::processor.cores.core.data 20964.592743                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::total 20964.592743                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::processor.cores.core.data 20964.592743                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::total 20964.592743                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.replacements      2169815                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::processor.cores.core.data            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::total            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::processor.cores.core.data            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::total            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::processor.cores.core.data         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::total         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::processor.cores.core.data          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::total          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::processor.cores.core.data            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::total            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::processor.cores.core.data            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::total            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::processor.cores.core.data     33497074                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::total     33497074                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::processor.cores.core.data      4054595                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::total      4054595                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::processor.cores.core.data 107077466682                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::total 107077466682                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::processor.cores.core.data     37551669                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::total     37551669                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::processor.cores.core.data     0.107974                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::total     0.107974                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::processor.cores.core.data 26408.917952                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::total 26408.917952                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::processor.cores.core.data      2250804                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::total      2250804                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::processor.cores.core.data      1803791                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::total      1803791                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::processor.cores.core.data  30063524382                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::total  30063524382                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.048035                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::total     0.048035                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data 16666.855740                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::total 16666.855740                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::processor.cores.core.data     11962318                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::total     11962318                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::processor.cores.core.data       639238                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::total       639238                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::processor.cores.core.data  21366449917                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::total  21366449917                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::processor.cores.core.data     12601556                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::total     12601556                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::processor.cores.core.data     0.050727                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::total     0.050727                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::processor.cores.core.data 33424.874486                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::total 33424.874486                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::processor.cores.core.data       639238                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::total       639238                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::processor.cores.core.data  21153583663                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::total  21153583663                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.050727                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::total     0.050727                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data 33091.874486                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::total 33091.874486                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.tagsInUse   511.822533                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.tags.totalRefs     47903335                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.sampledRefs      2170327                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.avgRefs    22.071944                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1dcache.tags.warmupTick 2277900525294                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.occupancies::processor.cores.core.data   511.822533                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::processor.cores.core.data     0.999653                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::total     0.999653                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::0          481                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::1           30                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::4            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1dcache.tags.tagAccesses    403396159                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.dataAccesses    403396159                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.demandHits::processor.cores.core.inst     11753345                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.demandHits::total     11753345                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::processor.cores.core.inst     11753345                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::total     11753345                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::processor.cores.core.inst          550                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::total          550                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::processor.cores.core.inst          550                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::total          550                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::processor.cores.core.inst     30174456                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::total     30174456                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::processor.cores.core.inst     30174456                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::total     30174456                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandAccesses::processor.cores.core.inst     11753895                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandAccesses::total     11753895                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::processor.cores.core.inst     11753895                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::total     11753895                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissRate::processor.cores.core.inst     0.000047                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMissRate::total     0.000047                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::processor.cores.core.inst     0.000047                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::total     0.000047                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::processor.cores.core.inst 54862.647273                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::total 54862.647273                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::processor.cores.core.inst 54862.647273                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::total 54862.647273                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_mshrs          362                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_targets        10558                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_mshrs            3                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_targets           84                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_mshrs   120.666667                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_targets   125.690476                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.demandMshrHits::processor.cores.core.inst           84                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrHits::total           84                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::processor.cores.core.inst           84                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::total           84                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::processor.cores.core.inst          466                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::total          466                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::processor.cores.core.inst          466                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::total          466                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::processor.cores.core.inst     26475492                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::total     26475492                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::processor.cores.core.inst     26475492                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::total     26475492                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::processor.cores.core.inst     0.000040                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::total     0.000040                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::processor.cores.core.inst     0.000040                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::total     0.000040                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::processor.cores.core.inst 56814.360515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::total 56814.360515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::processor.cores.core.inst 56814.360515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::total 56814.360515                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.replacements           24                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::processor.cores.core.inst     11753345                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::total     11753345                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::processor.cores.core.inst          550                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::total          550                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::processor.cores.core.inst     30174456                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::total     30174456                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::processor.cores.core.inst     11753895                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::total     11753895                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::processor.cores.core.inst     0.000047                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::total     0.000047                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::processor.cores.core.inst 54862.647273                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::total 54862.647273                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::processor.cores.core.inst           84                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::total           84                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::processor.cores.core.inst          466                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::total          466                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::processor.cores.core.inst     26475492                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::total     26475492                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000040                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::total     0.000040                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 56814.360515                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::total 56814.360515                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.tags.tagsInUse   373.704227                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.tags.totalRefs     11753811                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.sampledRefs          466                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.avgRefs 25222.770386                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1icache.tags.warmupTick 2277900457695                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1icache.tags.occupancies::processor.cores.core.inst   373.704227                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::processor.cores.core.inst     0.729891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::total     0.729891                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.occupanciesTaskId::1024          442                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::4          442                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ratioOccsTaskId::1024     0.863281                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1icache.tags.tagAccesses     94031626                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.dataAccesses     94031626                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadResp      1804257                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::WritebackDirty      1887338                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::CleanEvict      1860819                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeReq       272702                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeResp       272702                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExReq       366536                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExResp       366536                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadCleanReq          466                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadSharedReq      1803791                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port      7055873                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port          956                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount::total      7056829                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port    197685056                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port        29824                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize::total    197714880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.snoops      1578318                       # Total snoops (Count)
board.cache_hierarchy.clusters.l2_bus.snoopTraffic     62005504                       # Total snoop traffic (Byte)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::samples      4021813                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::mean     0.000116                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::stdev     0.010775                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::0      4021346     99.99%     99.99% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::1          467      0.01%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::total      4021813                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.occupancy   2147962554                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer0.occupancy   2258966439                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer1.occupancy       465534                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totRequests      4613334                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleRequests      2442541                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totSnoops          467                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleSnoops          467                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.data       576093                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::total       576093                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.data       576093                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::total       576093                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.inst          466                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.data      1594234                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::total      1594700                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.inst          466                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.data      1594234                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::total      1594700                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.inst     26162478                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.data  47787567930                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::total  47813730408                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.inst     26162478                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.data  47787567930                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::total  47813730408                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.inst          466                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.data      2170327                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::total      2170793                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.inst          466                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.data      2170327                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::total      2170793                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.inst            1                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.data     0.734559                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::total     0.734616                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.inst            1                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.data     0.734559                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::total     0.734616                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.inst 56142.656652                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.data 29975.253275                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::total 29982.899861                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.inst 56142.656652                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.data 29975.253275                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::total 29982.899861                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.writebacks::writebacks       968836                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.writebacks::total       968836                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.inst          466                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.data      1594234                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::total      1594700                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.inst          466                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.data      1594234                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::total      1594700                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.inst     25696944                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.data  46194928164                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::total  46220625108                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.inst     25696944                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.data  46194928164                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::total  46220625108                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.data     0.734559                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::total     0.734616                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.data     0.734559                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::total     0.734616                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 55143.656652                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 28976.253275                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::total 28983.899861                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 55143.656652                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 28976.253275                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::total 28983.899861                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.replacements      1578318                       # number of replacements (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::writebacks           22                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::total           22                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::processor.cores.core.inst          466                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::total          466                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::processor.cores.core.inst     26162478                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::total     26162478                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::processor.cores.core.inst          466                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::total          466                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::processor.cores.core.inst            1                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::total            1                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::processor.cores.core.inst 56142.656652                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::total 56142.656652                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::processor.cores.core.inst          466                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::total          466                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::processor.cores.core.inst     25696944                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::total     25696944                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::processor.cores.core.inst            1                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::total            1                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 55143.656652                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::total 55143.656652                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::processor.cores.core.data          125                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::total          125                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::processor.cores.core.data       366411                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::total       366411                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::processor.cores.core.data  20291917104                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::total  20291917104                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::processor.cores.core.data       366536                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::total       366536                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::processor.cores.core.data     0.999659                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::total     0.999659                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 55380.207210                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::total 55380.207210                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::processor.cores.core.data       366411                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::total       366411                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data  19925872515                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::total  19925872515                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.999659                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::total     0.999659                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 54381.207210                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::total 54381.207210                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::processor.cores.core.data       575968                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::total       575968                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::processor.cores.core.data      1227823                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::total      1227823                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::processor.cores.core.data  27495650826                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::total  27495650826                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::processor.cores.core.data      1803791                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::total      1803791                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.680690                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::total     0.680690                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 22393.822909                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::total 22393.822909                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      1227823                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::total      1227823                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data  26269055649                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::total  26269055649                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.680690                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::total     0.680690                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 21394.822909                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::total 21394.822909                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::processor.cores.core.data       272702                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::total       272702                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::processor.cores.core.data       272702                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::total       272702                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::writebacks       918502                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::total       918502                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::writebacks       918502                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::total       918502                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2cache.tags.tagsInUse 16293.980618                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.tags.totalRefs      4613312                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.sampledRefs      1594702                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.avgRefs     2.892899                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l2cache.tags.warmupTick 2277900456363                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l2cache.tags.occupancies::writebacks     0.234659                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.inst     4.658640                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.data 16289.087319                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::writebacks     0.000014                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.inst     0.000284                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.data     0.994207                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::total     0.994506                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupanciesTaskId::1024        16384                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::1         2781                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::2        13597                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::4            6                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l2cache.tags.tagAccesses     75408046                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.dataAccesses     75408046                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.transDist::ReadResp      1228289                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::WritebackDirty       968836                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::CleanEvict       609037                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExReq       366411                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExResp       366411                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadSharedReq      1228289                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.pktCount_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port      4767273                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l3_bus.pktSize_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port    164066304                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l3_bus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.l3_bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l3_bus.snoopFanout::samples      1594700                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::0      1594700    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::total      1594700                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.occupancy   1701711585                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.respLayer0.occupancy   1593105300                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.snoop_filter.totRequests      3172573                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleRequests      1577873                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.data       894921                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::total       894921                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.data       894921                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::total       894921                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.inst          466                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.data       699313                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::total       699779                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.inst          466                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.data       699313                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::total       699779                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.inst     24917391                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.data  37230859206                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::total  37255776597                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.inst     24917391                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.data  37230859206                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::total  37255776597                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.inst          466                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.data      1594234                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::total      1594700                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.inst          466                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.data      1594234                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::total      1594700                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.inst            1                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.data     0.438651                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::total     0.438815                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.inst            1                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.data     0.438651                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::total     0.438815                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.inst 53470.796137                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.data 53239.192187                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::total 53239.346418                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.inst 53470.796137                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.data 53239.192187                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::total 53239.346418                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.inst          466                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.data       699313                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::total       699779                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.inst          466                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.data       699313                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::total       699779                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.inst     23365611                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.data  34902146916                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::total  34925512527                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.inst     23365611                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.data  34902146916                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::total  34925512527                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.data     0.438651                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::total     0.438815                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.data     0.438651                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::total     0.438815                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.inst 50140.796137                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.data 49909.192187                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::total 49909.346418                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.inst 50140.796137                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.data 49909.192187                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::total 49909.346418                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::processor.cores.core.data            5                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::total            5                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::processor.cores.core.data       366406                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::total       366406                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::processor.cores.core.data  19311880788                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::total  19311880788                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::processor.cores.core.data       366411                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::total       366411                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::processor.cores.core.data     0.999986                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::total     0.999986                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::processor.cores.core.data 52706.235127                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::total 52706.235127                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::processor.cores.core.data       366406                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::total       366406                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::processor.cores.core.data  18091748808                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::total  18091748808                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.999986                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::total     0.999986                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 49376.235127                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::total 49376.235127                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.data       894916                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::total       894916                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.inst          466                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.data       332907                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::total       333373                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.inst     24917391                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.data  17918978418                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::total  17943895809                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.inst          466                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.data      1227823                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::total      1228289                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.inst            1                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.data     0.271136                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::total     0.271413                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 53470.796137                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 53825.778425                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::total 53825.282218                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.inst          466                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.data       332907                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::total       333373                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst     23365611                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data  16810398108                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::total  16833763719                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst            1                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.271136                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::total     0.271413                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 50140.796137                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 50495.778425                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::total 50495.282218                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.WritebackDirty.hits::writebacks       968836                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.hits::total       968836                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::writebacks       968836                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::total       968836                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_cache.tags.tagsInUse 544513.760394                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l3_cache.tags.totalRefs      3172573                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.sampledRefs       699779                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.avgRefs     4.533678                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l3_cache.tags.warmupTick 2277900452700                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.inst   383.250524                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.data 544130.509869                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.inst     0.000183                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.data     0.259462                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::total     0.259644                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.occupanciesTaskId::1024       699779                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::4       699779                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ratioOccsTaskId::1024     0.333681                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l3_cache.tags.tagAccesses     51460947                       # Number of tag accesses (Count)
board.cache_hierarchy.l3_cache.tags.dataAccesses     51460947                       # Number of data accesses (Count)
board.cache_hierarchy.l3_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp       333373                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq       366406                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp       366406                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq       333373                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port       699784                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port       699774                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::total      1399558                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      1399558                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port     22393088                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port     22392768                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::total     44785856                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total     44785856                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples       699779                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0       699779    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total       699779                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy    116514036                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.reqLayer1.occupancy    116512371                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy    571376579                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests       699779                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.inst::samples       235.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.data::samples    349657.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl0.priorityMaxLatency 0.000000918638                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl0.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl0.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl0.numStayReadState        711877                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl0.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl0.readReqs                349892                       # Number of read requests accepted (Count)
board.memory.mem_ctrl0.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl0.readBursts              349892                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl0.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl0.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl0.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl0.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl0.avgRdQLen                 1.21                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl0.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl0.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::6          349892                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.rdQLenPdf::0            256078                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::1             67998                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::2             24944                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::3               871                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::4                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::5                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::6                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl0.bytesReadSys          22393088                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl0.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl0.avgRdBWSys        447861760.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.totGap             38671026264                       # Total gap between requests (Tick)
board.memory.mem_ctrl0.avgGap               110522.75                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.inst        15040                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.data     22378048                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.inst 300800.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.data 447560960.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.inst          235                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.data       349657                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.inst      4873331                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.data   7979369243                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.inst     20737.58                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.data     22820.56                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.inst        15040                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.data     22378048                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::total     22393088                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::processor.cores.core.inst        15040                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::total        15040                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.inst          235                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.data       349657                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::total       349892                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.inst       300800                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.data    447560960                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::total    447861760                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::processor.cores.core.inst       300800                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::total       300800                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.inst       300800                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.data    447560960                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::total    447861760                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.readBursts         349892                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl0.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::0        10849                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::1        10843                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::2        10908                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::3        10955                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::4        10975                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::5        10970                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::6        10999                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::7        11014                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::8        10996                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::9        11001                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::10        10985                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::11        10978                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::12        10964                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::13        10941                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::14        10962                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::15        10981                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::16        10987                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::17        10992                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::18        10995                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::19        10997                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::20        10973                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::21        10984                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::22        10979                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::23        10902                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::24        10827                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::25        10836                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::26        10853                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::27        10847                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::28        10852                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::29        10844                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::30        10854                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::31        10849                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.totQLat        1863931710                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl0.dram.totBusLat      1165840144                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl0.dram.totMemAccLat   7984242574                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl0.dram.avgQLat           5327.16                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgMemAccLat     22819.16                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.readRowHits        316592                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl0.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl0.dram.readRowHitRate        90.48                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl0.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl0.dram.bytesPerActivate::samples        33300                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::mean   672.465105                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::gmean   512.669952                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::stdev   347.603445                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::0-127         3767     11.31%     11.31% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::128-255         1784      5.36%     16.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::256-383         3259      9.79%     26.46% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::384-511         1305      3.92%     30.38% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::512-639          972      2.92%     33.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::640-767         7928     23.81%     57.10% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::768-895         1206      3.62%     60.72% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::896-1023          434      1.30%     62.03% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::1024-1151        12645     37.97%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::total        33300                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.dramBytesRead     22393088                       # Total bytes read (Byte)
board.memory.mem_ctrl0.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl0.dram.avgRdBW        447.861760                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl0.dram.busUtil              2.33                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl0.dram.busUtilRead          2.33                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl0.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl0.dram.pageHitRate         90.48                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl0.dram.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl0.dram.rank0.actEnergy 26091479.231999                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preEnergy 46061496.028799                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.readEnergy 480888391.670398                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actBackEnergy 9983582676.914564                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preBackEnergy 9427780594.713955                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.totalEnergy 24304073122.541149                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.averagePower   486.081462                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::IDLE  28719407578                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT  19033242422                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.actEnergy 25835741.567999                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preEnergy 45610020.691199                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.readEnergy 478831214.870397                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actBackEnergy 9996433360.584141                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preBackEnergy 9418909056.749155                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.totalEnergy 24305287878.444332                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.averagePower   486.105758                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::IDLE  28692051177                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT  19060598823                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.inst::samples       231.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.data::samples    349656.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl1.priorityMaxLatency 0.000000920702                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl1.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl1.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl1.numStayReadState        711878                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl1.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl1.readReqs                349887                       # Number of read requests accepted (Count)
board.memory.mem_ctrl1.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl1.readBursts              349887                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl1.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl1.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl1.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl1.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl1.avgRdQLen                 1.21                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl1.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl1.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::6          349887                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.rdQLenPdf::0            256102                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::1             67976                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::2             24948                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::3               861                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::4                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::5                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::6                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl1.bytesReadSys          22392768                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl1.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl1.avgRdBWSys        447855360.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.totGap             38669986971                       # Total gap between requests (Tick)
board.memory.mem_ctrl1.avgGap               110521.36                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.inst        14784                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.data     22377984                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.inst 295680.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.data 447559680.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.inst          231                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.data       349656                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.inst      5835321                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.data   7938780996                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.inst     25261.13                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.data     22704.55                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.inst        14784                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.data     22377984                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::total     22392768                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::processor.cores.core.inst        14784                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::total        14784                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.inst          231                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.data       349656                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::total       349887                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.inst       295680                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.data    447559680                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::total    447855360                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::processor.cores.core.inst       295680                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::total       295680                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.inst       295680                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.data    447559680                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::total    447855360                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.readBursts         349887                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl1.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::0        10853                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::1        10846                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::2        10911                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::3        10956                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::4        10977                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::5        10970                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::6        10999                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::7        11012                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::8        10991                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::9        10996                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::10        10981                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::11        10975                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::12        10961                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::13        10938                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::14        10956                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::15        10979                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::16        10985                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::17        10989                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::18        10990                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::19        10997                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::20        10969                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::21        10984                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::22        10979                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::23        10903                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::24        10829                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::25        10838                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::26        10857                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::27        10851                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::28        10857                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::29        10850                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::30        10856                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::31        10852                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.totQLat        1824392913                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl1.dram.totBusLat      1165823484                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl1.dram.totMemAccLat   7944616317                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl1.dram.avgQLat           5214.23                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgMemAccLat     22706.23                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.readRowHits        316626                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl1.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl1.dram.readRowHitRate        90.49                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl1.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl1.dram.bytesPerActivate::samples        33261                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::mean   673.243979                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::gmean   514.452618                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::stdev   346.914013                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::0-127         3692     11.10%     11.10% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::128-255         1841      5.54%     16.64% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::256-383         3225      9.70%     26.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::384-511         1301      3.91%     30.24% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::512-639          994      2.99%     33.23% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::640-767         7924     23.82%     57.05% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::768-895         1208      3.63%     60.69% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::896-1023          441      1.33%     62.01% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::1024-1151        12635     37.99%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::total        33261                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.dramBytesRead     22392768                       # Total bytes read (Byte)
board.memory.mem_ctrl1.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl1.dram.avgRdBW        447.855360                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl1.dram.busUtil              2.33                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl1.dram.busUtilRead          2.33                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl1.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl1.dram.pageHitRate         90.49                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl1.dram.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.dram.rank0.actEnergy 26064969.839999                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preEnergy 46014696.755999                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.readEnergy 480833533.622397                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actBackEnergy 9976936192.572147                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preBackEnergy 9432369030.605154                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.totalEnergy 24301886907.377110                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.averagePower   486.037738                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::IDLE  28733879839                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT  19018770161                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.actEnergy 25801435.295999                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preEnergy 45549456.926399                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.readEnergy 478872358.406397                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actBackEnergy 9987709751.424135                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preBackEnergy 9424931446.829155                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.totalEnergy 24302532932.863552                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.averagePower   486.050659                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::IDLE  28710909643                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT  19041740357                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles        150150150                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.260312                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.793454                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       188816172                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           28                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      175886640                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued      3441615                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined     13286435                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined     34561274                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           22                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples    150113822                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.171689                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.949299                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     56957007     37.94%     37.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1     10435017      6.95%     44.89% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2     82713771     55.10%     99.99% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3         8027      0.01%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::9            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::10            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::11            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::12            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            3                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total    150113822                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu     90215464     23.16%     23.16% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           12      0.00%     23.16% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            2      0.00%     23.16% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd     86159296     22.12%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu           99      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            1      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     45.29% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd      7692626      1.98%     47.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     47.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     47.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     47.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv       271299      0.07%     47.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     47.33% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult     38681432      9.93%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     57.26% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead     29969168      7.70%     64.96% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite     10255417      2.63%     67.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead     85660051     21.99%     89.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite     40551539     10.41%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass        12208      0.01%      0.01% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu     42164591     23.97%     23.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult          197      0.00%     23.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv           14      0.00%     23.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     20137927     11.45%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu           14      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            2      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           18      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     35.43% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     31853254     18.11%     53.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     53.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     53.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     53.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv       262144      0.15%     53.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     53.69% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     29577982     16.82%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     70.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead      3040787      1.73%     72.23% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite      1814204      1.03%     73.26% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     36204614     20.58%     93.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     10818684      6.15%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    175886640                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.171405                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy           389456406                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        2.214247                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.instsAddedPerPart::IQ_part_0     94646254     50.13%     50.13% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_1     94169946     49.87%    100.00% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::total    188816200                       # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsInTheIQ           880                       # Number of instructions in the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_0          440     50.00%     50.00% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_1          440     50.00%    100.00% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::total          880                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.partIQFull::IQ_part_0            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::IQ_part_1            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::total            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_0            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_1            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::total            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.intInstQueueReads    300481429                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites     30202043                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses     26877610                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    594303692                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    171902583                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    148816969                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    122499350                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    442831488                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts        12078                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             305                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           36328                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     41969858                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     13443233                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads      7421610                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      6572467                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return          373      0.02%      0.02% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect          399      0.03%      0.05% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect            9      0.00%      0.05% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      1524014     99.22%     99.27% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond        11076      0.72%     99.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond          157      0.01%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total      1536028                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          259      0.23%      0.23% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          289      0.26%      0.49% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            5      0.00%      0.49% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond       111092     98.90%     99.39% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          549      0.49%     99.88% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.88% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond          136      0.12%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total       112330                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            2      0.01%      0.01% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect           91      0.37%      0.38% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            4      0.02%      0.40% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond        24353     99.24%     99.64% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           66      0.27%     99.91% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.91% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           23      0.09%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total        24539                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return          114      0.01%      0.01% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect          110      0.01%      0.02% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            4      0.00%      0.02% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      1412914     99.24%     99.26% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        10527      0.74%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           21      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total      1423690                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            2      0.01%      0.01% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           45      0.18%      0.19% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            4      0.02%      0.21% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond        24323     99.56%     99.77% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           35      0.14%     99.91% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.91% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           21      0.09%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total        24430                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget        36567      2.38%      2.38% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      1499092     97.60%     99.98% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS          368      0.02%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            1      0.00%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total      1536028                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         2156      8.79%      8.79% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        22366     91.21%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total        24522                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      1524014                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      1488287                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect        24539                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          205                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2167                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        22372                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups      1536028                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2138                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      1507364                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.981339                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          307                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups          166                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            1                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          165                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return          373      0.02%      0.02% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect          399      0.03%      0.05% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect            9      0.00%      0.05% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      1524014     99.22%     99.27% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond        11076      0.72%     99.99% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.99% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond          157      0.01%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total      1536028                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return          373      1.30%      1.30% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          144      0.50%      1.80% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect            9      0.03%      1.84% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond        27866     97.22%     99.05% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          115      0.40%     99.45% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     99.45% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond          157      0.55%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total        28664                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect           91      4.26%      4.26% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      4.26% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond         1981     92.66%     96.91% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond           66      3.09%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total         2138                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect           91      4.26%      4.26% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      4.26% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond         1981     92.66%     96.91% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond           66      3.09%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total         2138                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups          166                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            1                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          165                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           27                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords          193                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            2                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes          667                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops          667                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes          553                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used          114                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct          112                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            2                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts     13287136                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            6                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts        24380                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples    148439952                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.182491                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     2.529182                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    100696470     67.84%     67.84% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     16150019     10.88%     78.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      7156257      4.82%     83.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      5960553      4.02%     87.55% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      6612989      4.45%     92.01% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      2430741      1.64%     93.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      2364176      1.59%     95.24% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7       728531      0.49%     95.73% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8       804063      0.54%     96.27% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::9       520214      0.35%     96.62% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::10       831049      0.56%     97.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::11       349346      0.24%     97.42% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::12      3835544      2.58%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value           12                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total    148439952                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            4                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls          114                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass        10574      0.01%      0.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu     42104672     23.99%     23.99% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult          196      0.00%     23.99% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv           14      0.00%     23.99% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     20103805     11.45%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            8      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            2      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           18      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     35.45% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     31850649     18.15%     53.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     53.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     53.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     53.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv       262144      0.15%     53.74% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     53.74% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     29571264     16.85%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     70.59% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead      2863562      1.63%     72.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite      1807474      1.03%     73.25% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     36160413     20.60%     93.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite     10794085      6.15%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    175528880                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      3835544                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts    119137311                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    175528880                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP    119137311                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    175528880                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.260312                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.793454                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     51625534                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    148706454                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     73762198                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     39023975                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     12601559                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        10574      0.01%      0.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     42104672     23.99%     23.99% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult          196      0.00%     23.99% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv           14      0.00%     23.99% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     20103805     11.45%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            8      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            2      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           18      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     35.45% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     31850649     18.15%     53.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     53.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     53.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     53.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv       262144      0.15%     53.74% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     53.74% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     29571264     16.85%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     70.59% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead      2863562      1.63%     72.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      1807474      1.03%     73.25% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     36160413     20.60%     93.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite     10794085      6.15%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    175528880                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      1423691                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      1423552                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl          139                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      1412915                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl        10776                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall          114                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn          114                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      5003511                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles    125872423                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles      6067188                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles     13144387                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles        26309                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      1479397                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          160                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    189180586                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         1021                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    175874560                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches      1424227                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     39236260                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     12632012                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.171325                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads      7080237                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites     18524564                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegReads    235868699                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    138000174                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     81662539                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     22209527                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     51868272                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads     54732748                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      1499461                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles     150049922                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles        52936                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          525                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles            6                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         1342                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     11753902                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          264                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples    150113822                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.266899                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     3.000140                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    122798530     81.80%     81.80% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1      1721838      1.15%     82.95% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      2024223      1.35%     84.30% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3      1646201      1.10%     85.40% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4      2040992      1.36%     86.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5      1502865      1.00%     87.76% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6      1853093      1.23%     88.99% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7      2000436      1.33%     90.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8      2533637      1.69%     92.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::9      1518968      1.01%     93.02% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::10     10473039      6.98%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value           10                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total    150113822                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    129032653                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.859357                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches      1536028                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.010230                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        35559                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles        26309                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles      1647561                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles     13266834                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    188816200                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts            0                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     41969858                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     13443233                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           12                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ (or every part of it) has become full , causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents     13261626                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         2001                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        22372                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         2027                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts        24399                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    175697159                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    175694579                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst    143583386                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    273182562                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.170126                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.525595                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.interrupts.clk_domain.clock         5328                       # Clock period in ticks (Tick)
board.processor.cores.core.lsq0.forwLoads      1518804                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads      2945656                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            1                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         2001                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores       841637                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache        49616                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     39023974                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean    11.252755                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    40.042415                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     35294722     90.44%     90.44% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19       870143      2.23%     92.67% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29       188060      0.48%     93.16% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39       996014      2.55%     95.71% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49        33623      0.09%     95.79% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59        14264      0.04%     95.83% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69        10768      0.03%     95.86% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79        12015      0.03%     95.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89        11116      0.03%     95.92% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99         3541      0.01%     95.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109         1217      0.00%     95.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119         3144      0.01%     95.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129         3320      0.01%     95.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139        45061      0.12%     96.06% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149       283340      0.73%     96.79% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159       727798      1.87%     98.65% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169       255308      0.65%     99.31% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179        22847      0.06%     99.37% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189        26094      0.07%     99.43% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199        63813      0.16%     99.60% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209        39404      0.10%     99.70% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219        32935      0.08%     99.78% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229        23678      0.06%     99.84% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239        25683      0.07%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249         9550      0.02%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259          832      0.00%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269          639      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279          798      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289          451      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299           83      0.00%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows        23713      0.06%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         1537                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     39023974                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.rdAccesses     39072296                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrAccesses     12632012                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.dtb.rdMisses        39434                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrMisses         5819                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.rdAccesses            0                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.itb.wrAccesses     11753903                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.itb.rdMisses            0                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.itb.wrMisses            9                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 2327900383436                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles        26309                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      8668864                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles     49478162                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles     12239653                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles     79700830                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    188942487                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents     25219384                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.SQFullEvents     49515368                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands    223482417                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups    507069281                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     87170690                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    254074235                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps    207729083                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps     15752191                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    104613690                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        333420424                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       379306817                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts    119137311                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    175528880                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
