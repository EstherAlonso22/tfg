
---------- Begin Simulation Statistics ----------
simSeconds                                   0.016459                       # Number of seconds simulated (Second)
simTicks                                  16458974550                       # Number of ticks simulated (Tick)
finalTick                                126691000848                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    669.06                       # Real time elapsed on the host (Second)
hostTickRate                                 24600138                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1819656                       # Number of bytes of host memory used (Byte)
simInsts                                     85437063                       # Number of instructions simulated (Count)
simOps                                      124836159                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   127697                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     186584                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.dptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.iptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.demandHits::processor.cores.core.data     37280402                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandHits::total     37280402                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::processor.cores.core.data     37280402                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::total     37280402                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::processor.cores.core.data       783106                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::total       783106                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::processor.cores.core.data       783106                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::total       783106                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::processor.cores.core.data   9695787786                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::total   9695787786                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::processor.cores.core.data   9695787786                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::total   9695787786                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::processor.cores.core.data     38063508                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::total     38063508                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::processor.cores.core.data     38063508                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::total     38063508                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::processor.cores.core.data     0.020574                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::total     0.020574                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::processor.cores.core.data     0.020574                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::total     0.020574                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::processor.cores.core.data 12381.194610                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::total 12381.194610                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::processor.cores.core.data 12381.194610                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::total 12381.194610                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_mshrs           72                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_targets        39215                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_mshrs           28                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_targets         1778                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_mshrs     2.571429                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_targets    22.055681                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.writebacks::writebacks       307915                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.writebacks::total       307915                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::processor.cores.core.data       246853                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::total       246853                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::processor.cores.core.data       246853                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::total       246853                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::processor.cores.core.data       536253                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::total       536253                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::processor.cores.core.data       536253                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::total       536253                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::processor.cores.core.data   4707028206                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::total   4707028206                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::processor.cores.core.data   4707028206                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::total   4707028206                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::processor.cores.core.data     0.014088                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::total     0.014088                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::processor.cores.core.data     0.014088                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::total     0.014088                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::processor.cores.core.data  8777.625871                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::total  8777.625871                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::processor.cores.core.data  8777.625871                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::total  8777.625871                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.replacements       494681                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::processor.cores.core.data            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::total            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::processor.cores.core.data            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::total            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::processor.cores.core.data         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::total         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::processor.cores.core.data          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::total          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::processor.cores.core.data            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::total            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::processor.cores.core.data            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::total            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::processor.cores.core.data     21306291                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::total     21306291                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::processor.cores.core.data       578447                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::total       578447                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::processor.cores.core.data   7950398310                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::total   7950398310                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::processor.cores.core.data     21884738                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::total     21884738                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::processor.cores.core.data     0.026432                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::total     0.026432                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::processor.cores.core.data 13744.385069                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::total 13744.385069                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::processor.cores.core.data       246852                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::total       246852                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::processor.cores.core.data       331595                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::total       331595                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::processor.cores.core.data   3029793174                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::total   3029793174                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.015152                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::total     0.015152                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data  9137.029129                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::total  9137.029129                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::processor.cores.core.data     15974111                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::total     15974111                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::processor.cores.core.data       204659                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::total       204659                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::processor.cores.core.data   1745389476                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::total   1745389476                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::processor.cores.core.data     16178770                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::total     16178770                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::processor.cores.core.data     0.012650                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::total     0.012650                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::processor.cores.core.data  8528.281072                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::total  8528.281072                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::processor.cores.core.data            1                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::total            1                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::processor.cores.core.data       204658                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::total       204658                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::processor.cores.core.data   1677235032                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::total   1677235032                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.012650                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::total     0.012650                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data  8195.306472                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::total  8195.306472                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.tagsInUse   511.491168                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.tags.totalRefs     37825569                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.sampledRefs       495193                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.avgRefs    76.385508                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1dcache.tags.warmupTick 110232168156                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.occupancies::processor.cores.core.data   511.491168                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::processor.cores.core.data     0.999006                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::total     0.999006                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::0          512                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1dcache.tags.tagAccesses    305003289                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.dataAccesses    305003289                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.demandHits::processor.cores.core.inst     10295659                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.demandHits::total     10295659                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::processor.cores.core.inst     10295659                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::total     10295659                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::processor.cores.core.inst         1404                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::total         1404                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::processor.cores.core.inst         1404                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::total         1404                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::processor.cores.core.inst     77329924                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::total     77329924                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::processor.cores.core.inst     77329924                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::total     77329924                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandAccesses::processor.cores.core.inst     10297063                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandAccesses::total     10297063                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::processor.cores.core.inst     10297063                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::total     10297063                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissRate::processor.cores.core.inst     0.000136                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMissRate::total     0.000136                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::processor.cores.core.inst     0.000136                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::total     0.000136                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::processor.cores.core.inst 55078.293447                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::total 55078.293447                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::processor.cores.core.inst 55078.293447                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::total 55078.293447                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_mshrs          529                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_targets        30264                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_mshrs            6                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_targets          218                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_mshrs    88.166667                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_targets   138.825688                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.demandMshrHits::processor.cores.core.inst          218                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrHits::total          218                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::processor.cores.core.inst          218                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::total          218                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::processor.cores.core.inst         1186                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::total         1186                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::processor.cores.core.inst         1186                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::total         1186                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::processor.cores.core.inst     66784148                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::total     66784148                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::processor.cores.core.inst     66784148                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::total     66784148                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::processor.cores.core.inst     0.000115                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::total     0.000115                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::processor.cores.core.inst     0.000115                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::total     0.000115                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::processor.cores.core.inst 56310.411467                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::total 56310.411467                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::processor.cores.core.inst 56310.411467                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::total 56310.411467                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.replacements          674                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::processor.cores.core.inst     10295659                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::total     10295659                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::processor.cores.core.inst         1404                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::total         1404                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::processor.cores.core.inst     77329924                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::total     77329924                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::processor.cores.core.inst     10297063                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::total     10297063                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::processor.cores.core.inst     0.000136                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::total     0.000136                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::processor.cores.core.inst 55078.293447                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::total 55078.293447                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::processor.cores.core.inst          218                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::total          218                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::processor.cores.core.inst         1186                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::total         1186                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::processor.cores.core.inst     66784148                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::total     66784148                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000115                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::total     0.000115                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 56310.411467                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::total 56310.411467                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.tags.tagsInUse   491.227296                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.tags.totalRefs     10296845                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.sampledRefs         1186                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.avgRefs  8681.994098                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1icache.tags.warmupTick 110232100557                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1icache.tags.occupancies::processor.cores.core.inst   491.227296                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::processor.cores.core.inst     0.959428                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::total     0.959428                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::0            5                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::2           11                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::3          298                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::4          198                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1icache.tags.tagAccesses     82377690                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.dataAccesses     82377690                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadResp       332781                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::WritebackDirty       403025                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::CleanEvict       247629                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeReq        41060                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeResp        41060                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExReq       163598                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExResp       163598                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadCleanReq         1186                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadSharedReq       331595                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port      1567187                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port         3046                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount::total      1570233                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port     51398912                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port        75904                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize::total     51474816                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.snoops       155299                       # Total snoops (Count)
board.cache_hierarchy.clusters.l2_bus.snoopTraffic      6087040                       # Total snoop traffic (Byte)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::samples       692738                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::mean     0.001890                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::stdev     0.043429                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::0       691429     99.81%     99.81% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::1         1309      0.19%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::total       692738                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.occupancy    548991792                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer0.occupancy    508370787                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer1.occupancy      1186806                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totRequests      1032794                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleRequests       536415                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totSnoops         1309                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleSnoops         1309                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.inst            1                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.data       324838                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::total       324839                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.inst            1                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.data       324838                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::total       324839                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.inst         1185                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.data       170355                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::total       171540                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.inst         1185                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.data       170355                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::total       171540                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.inst     65982618                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.data   3474141381                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::total   3540123999                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.inst     65982618                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.data   3474141381                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::total   3540123999                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.inst         1186                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.data       495193                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::total       496379                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.inst         1186                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.data       495193                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::total       496379                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.inst     0.999157                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.data     0.344017                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::total     0.345583                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.inst     0.999157                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.data     0.344017                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::total     0.345583                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.inst 55681.534177                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.data 20393.539262                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::total 20637.309077                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.inst 55681.534177                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.data 20393.539262                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::total 20637.309077                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.writebacks::writebacks        95110                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.writebacks::total        95110                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.inst         1185                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.data       170355                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::total       171540                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.inst         1185                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.data       170355                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::total       171540                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.inst     64798803                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.data   3303956736                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::total   3368755539                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.inst     64798803                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.data   3303956736                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::total   3368755539                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.inst     0.999157                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.data     0.344017                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::total     0.345583                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.inst     0.999157                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.data     0.344017                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::total     0.345583                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 54682.534177                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 19394.539262                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::total 19638.309077                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 54682.534177                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 19394.539262                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::total 19638.309077                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.replacements       155299                       # number of replacements (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::writebacks          670                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::total          670                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.hits::processor.cores.core.inst            1                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.hits::total            1                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::processor.cores.core.inst         1185                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::total         1185                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::processor.cores.core.inst     65982618                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::total     65982618                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::processor.cores.core.inst         1186                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::total         1186                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::processor.cores.core.inst     0.999157                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::total     0.999157                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::processor.cores.core.inst 55681.534177                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::total 55681.534177                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::processor.cores.core.inst         1185                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::total         1185                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::processor.cores.core.inst     64798803                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::total     64798803                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.999157                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::total     0.999157                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 54682.534177                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::total 54682.534177                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::processor.cores.core.data       143266                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::total       143266                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::processor.cores.core.data        20332                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::total        20332                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::processor.cores.core.data   1128849021                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::total   1128849021                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::processor.cores.core.data       163598                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::total       163598                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::processor.cores.core.data     0.124280                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::total     0.124280                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 55520.805676                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::total 55520.805676                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::processor.cores.core.data        20332                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::total        20332                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   1108537353                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::total   1108537353                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.124280                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::total     0.124280                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 54521.805676                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::total 54521.805676                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::processor.cores.core.data       181572                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::total       181572                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::processor.cores.core.data       150023                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::total       150023                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::processor.cores.core.data   2345292360                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::total   2345292360                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::processor.cores.core.data       331595                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::total       331595                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.452428                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::total     0.452428                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 15632.885358                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::total 15632.885358                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data       150023                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::total       150023                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data   2195419383                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::total   2195419383                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.452428                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::total     0.452428                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 14633.885358                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::total 14633.885358                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::processor.cores.core.data        41060                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::total        41060                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::processor.cores.core.data        41060                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::total        41060                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::writebacks       307915                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::total       307915                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::writebacks       307915                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::total       307915                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2cache.tags.tagsInUse 16116.202884                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.tags.totalRefs      1032124                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.sampledRefs       171683                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.avgRefs     6.011801                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l2cache.tags.warmupTick 110232099225                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l2cache.tags.occupancies::writebacks    50.251113                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.inst   145.681965                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.data 15920.269806                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::writebacks     0.003067                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.inst     0.008892                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.data     0.971696                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::total     0.983655                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupanciesTaskId::1024        16384                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::0          474                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::1         2588                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::2         3974                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::3         9030                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::4          318                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l2cache.tags.tagAccesses     16696387                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.dataAccesses     16696387                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.transDist::ReadResp       151208                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::WritebackDirty        95110                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::CleanEvict        59550                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExReq        20332                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExResp        20332                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadSharedReq       151208                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.pktCount_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port       497740                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l3_bus.pktSize_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port     17065600                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l3_bus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.l3_bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l3_bus.snoopFanout::samples       171540                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::0       171540    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::total       171540                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.occupancy    171967860                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.respLayer0.occupancy    171368460                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.snoop_filter.totRequests       326200                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleRequests       154660                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.inst           10                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.data       131379                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::total       131389                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.inst           10                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.data       131379                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::total       131389                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.inst         1175                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.data        38976                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::total        40151                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.inst         1175                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.data        38976                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::total        40151                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.inst     62745192                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.data   2080506078                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::total   2143251270                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.inst     62745192                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.data   2080506078                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::total   2143251270                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.inst         1185                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.data       170355                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::total       171540                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.inst         1185                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.data       170355                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::total       171540                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.inst     0.991561                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.data     0.228793                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::total     0.234062                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.inst     0.991561                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.data     0.228793                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::total     0.234062                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.inst 53400.163404                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.data 53379.158405                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::total 53379.773107                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.inst 53400.163404                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.data 53379.158405                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::total 53379.773107                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.inst         1175                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.data        38976                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::total        40151                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.inst         1175                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.data        38976                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::total        40151                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.inst     58832442                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.data   1950715998                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::total   2009548440                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.inst     58832442                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.data   1950715998                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::total   2009548440                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.inst     0.991561                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.data     0.228793                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::total     0.234062                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.inst     0.991561                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.data     0.228793                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::total     0.234062                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.inst 50070.163404                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.data 50049.158405                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::total 50049.773107                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.inst 50070.163404                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.data 50049.158405                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::total 50049.773107                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::processor.cores.core.data            7                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::total            7                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::processor.cores.core.data        20325                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::total        20325                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::processor.cores.core.data   1073304288                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::total   1073304288                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::processor.cores.core.data        20332                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::total        20332                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::processor.cores.core.data     0.999656                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::total     0.999656                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::processor.cores.core.data 52807.099041                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::total 52807.099041                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::processor.cores.core.data        20325                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::total        20325                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::processor.cores.core.data   1005622038                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::total   1005622038                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.999656                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::total     0.999656                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 49477.099041                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::total 49477.099041                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.inst           10                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.data       131372                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::total       131382                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.inst         1175                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.data        18651                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::total        19826                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.inst     62745192                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.data   1007201790                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::total   1069946982                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.inst         1185                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.data       150023                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::total       151208                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.inst     0.991561                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.data     0.124321                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::total     0.131117                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 53400.163404                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 54002.562329                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::total 53966.860789                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.inst         1175                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.data        18651                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::total        19826                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst     58832442                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data    945093960                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::total   1003926402                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.991561                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.124321                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::total     0.131117                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 50070.163404                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 50672.562329                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::total 50636.860789                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.WritebackDirty.hits::writebacks        95110                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.hits::total        95110                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::writebacks        95110                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::total        95110                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_cache.tags.tagsInUse 38109.954396                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l3_cache.tags.totalRefs       326200                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.sampledRefs        40151                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.avgRefs     8.124331                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l3_cache.tags.warmupTick 110232095562                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.inst   919.625731                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.data 37190.328665                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.inst     0.000439                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.data     0.017734                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::total     0.018172                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.occupanciesTaskId::1024        40151                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::2            7                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::3          809                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::4        39335                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ratioOccsTaskId::1024     0.019145                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l3_cache.tags.tagAccesses      5259351                       # Number of tag accesses (Count)
board.cache_hierarchy.l3_cache.tags.dataAccesses      5259351                       # Number of data accesses (Count)
board.cache_hierarchy.l3_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp        19826                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        20325                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        20325                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq        19826                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port        40138                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port        40164                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::total        80302                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        80302                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port      1284416                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port      1285248                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::total      2569664                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2569664                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        40151                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        40151    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        40151                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy      6682977                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.reqLayer1.occupancy      6687306                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy     32066320                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests        40151                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.inst::samples       589.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.data::samples     19480.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl0.priorityMaxLatency 0.000000764988                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl0.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl0.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl0.numStayReadState         44274                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl0.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl0.readReqs                 20069                       # Number of read requests accepted (Count)
board.memory.mem_ctrl0.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl0.readBursts               20069                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl0.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl0.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl0.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl0.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl0.avgRdQLen                 1.21                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl0.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl0.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::6           20069                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.rdQLenPdf::0             15787                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::1              3058                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::2               885                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::3               335                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::4                 3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::5                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::6                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl0.bytesReadSys           1284416                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl0.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl0.avgRdBWSys        78037425.48468792                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.totGap             16318033632                       # Total gap between requests (Tick)
board.memory.mem_ctrl0.avgGap               813096.50                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.inst        37696                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.data      1246720                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.inst 2290300.643304658122                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.data 75747124.841383263469                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.inst          589                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.data        19480                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.inst     13430369                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.data    447727529                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.inst     22801.98                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.data     22983.96                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.inst        37696                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.data      1246720                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::total      1284416                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::processor.cores.core.inst        37696                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::total        37696                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.inst          589                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.data        19480                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::total        20069                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.inst      2290301                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.data     75747125                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::total     78037425                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::processor.cores.core.inst      2290301                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::total      2290301                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.inst      2290301                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.data     75747125                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::total     78037425                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.readBursts          20069                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl0.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::0          637                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::1          617                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::2          753                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::3          763                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::4          747                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::5          686                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::6          655                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::7          661                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::8          648                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::9          642                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::10          624                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::11          637                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::12          619                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::13          621                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::14          634                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::15          626                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::16          620                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::17          637                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::18          638                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::19          627                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::20          637                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::21          618                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::22          617                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::23          636                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::24          622                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::25          610                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::26          513                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::27          502                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::28          524                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::29          509                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::30          566                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::31          623                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.totQLat         110110950                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl0.dram.totBusLat        66869908                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl0.dram.totMemAccLat    461157898                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl0.dram.avgQLat           5486.62                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgMemAccLat     22978.62                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.readRowHits         17790                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl0.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl0.dram.readRowHitRate        88.64                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl0.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl0.dram.bytesPerActivate::samples         2279                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::mean   563.587538                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::gmean   369.376106                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::stdev   382.457015                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::0-127          513     22.51%     22.51% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::128-255          166      7.28%     29.79% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::256-383          206      9.04%     38.83% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::384-511          113      4.96%     43.79% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::512-639           77      3.38%     47.17% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::640-767          426     18.69%     65.86% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::768-895           59      2.59%     68.45% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::896-1023           26      1.14%     69.59% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::1024-1151          693     30.41%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::total         2279                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.dramBytesRead      1284416                       # Total bytes read (Byte)
board.memory.mem_ctrl0.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl0.dram.avgRdBW         78.037425                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl0.dram.busUtil              0.41                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl0.dram.busUtilRead          0.41                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl0.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl0.dram.pageHitRate         88.64                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl0.dram.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl0.dram.rank0.actEnergy 2064613.824000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preEnergy 3644837.481600                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.readEnergy 28992478.368000                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.refreshEnergy 1428082776.304748                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actBackEnergy 1075665907.461559                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preBackEnergy 4629617619.916773                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.totalEnergy 7168068233.356913                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.averagePower   435.511229                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::IDLE  14149880732                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::REF    739550000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT   1569543818                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.actEnergy 1489204.080000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preEnergy 2629017.972000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.readEnergy 26054829.897600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.refreshEnergy 1428082776.304748                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actBackEnergy 1000833882.249556                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preBackEnergy 4681278307.372773                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.totalEnergy 7140368017.876914                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.averagePower   433.828243                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::IDLE  14308360824                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::REF    739550000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT   1411063726                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.inst::samples       586.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.data::samples     19496.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl1.priorityMaxLatency 0.000000760986                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl1.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl1.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl1.numStayReadState         44301                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl1.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl1.readReqs                 20082                       # Number of read requests accepted (Count)
board.memory.mem_ctrl1.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl1.readBursts               20082                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl1.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl1.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl1.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl1.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl1.avgRdQLen                 1.02                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl1.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl1.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::6           20082                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.rdQLenPdf::0             15795                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::1              3053                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::2               892                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::3               332                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::4                 5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::5                 4                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::6                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl1.bytesReadSys           1285248                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl1.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl1.avgRdBWSys        78087975.41399685                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.totGap             16318012320                       # Total gap between requests (Tick)
board.memory.mem_ctrl1.avgGap               812569.08                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.inst        37504                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.data      1247744                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.inst 2278635.275002596900                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.data 75809340.138994246721                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.inst          586                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.data        19496                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.inst     13497137                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.data    443523138                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.inst     23032.66                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.data     22749.44                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.inst        37504                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.data      1247744                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::total      1285248                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::processor.cores.core.inst        37504                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::total        37504                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.inst          586                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.data        19496                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::total        20082                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.inst      2278635                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.data     75809340                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::total     78087975                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::processor.cores.core.inst      2278635                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::total      2278635                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.inst      2278635                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.data     75809340                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::total     78087975                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.readBursts          20082                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl1.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::0          638                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::1          616                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::2          756                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::3          763                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::4          747                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::5          680                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::6          656                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::7          661                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::8          648                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::9          646                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::10          624                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::11          636                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::12          622                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::13          626                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::14          633                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::15          627                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::16          619                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::17          639                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::18          634                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::19          626                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::20          637                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::21          621                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::22          616                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::23          636                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::24          619                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::25          609                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::26          514                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::27          504                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::28          528                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::29          506                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::30          569                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::31          626                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.totQLat         105745931                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl1.dram.totBusLat        66913224                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl1.dram.totMemAccLat    457020275                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl1.dram.avgQLat           5265.71                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgMemAccLat     22757.71                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.readRowHits         17798                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl1.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl1.dram.readRowHitRate        88.63                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl1.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl1.dram.bytesPerActivate::samples         2284                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::mean   562.718039                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::gmean   368.405740                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::stdev   382.397897                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::0-127          520     22.77%     22.77% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::128-255          159      6.96%     29.73% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::256-383          207      9.06%     38.79% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::384-511          118      5.17%     43.96% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::512-639           71      3.11%     47.07% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::640-767          427     18.70%     65.76% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::768-895           64      2.80%     68.56% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::896-1023           20      0.88%     69.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::1024-1151          698     30.56%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::total         2284                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.dramBytesRead      1285248                       # Total bytes read (Byte)
board.memory.mem_ctrl1.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl1.dram.avgRdBW         78.087975                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl1.dram.busUtil              0.41                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl1.dram.busUtilRead          0.41                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl1.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl1.dram.pageHitRate         88.63                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl1.dram.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.dram.rank0.actEnergy 2072410.704000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preEnergy 3658601.973600                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.readEnergy 29017164.489600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.refreshEnergy 1428082776.304748                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actBackEnergy 1103946942.520779                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preBackEnergy 4610093656.627172                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.totalEnergy 7176871552.620109                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.averagePower   436.046093                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::IDLE  14089736585                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::REF    739550000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT   1629687965                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.actEnergy 1489204.080000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preEnergy 2629017.972000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.readEnergy 26065801.507200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.refreshEnergy 1428082776.304748                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actBackEnergy 1017614325.386357                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preBackEnergy 4669693839.014376                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.totalEnergy 7145574964.264909                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.averagePower   434.144603                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::IDLE  14273049335                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::REF    739550000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT   1446375215                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles         49426350                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.578512                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.728573                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       143944547                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           44                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      133417215                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued        12003                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined     19108368                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined     34217482                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           36                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples     49326819                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     2.704760                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     2.800224                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     11648343     23.61%     23.61% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1     10537925     21.36%     44.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2      7308807     14.82%     59.80% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3      5109376     10.36%     70.15% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4      3869558      7.84%     78.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5      2973494      6.03%     84.03% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6      2337570      4.74%     88.77% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7      1707039      3.46%     92.23% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8      1268029      2.57%     94.80% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::9       908530      1.84%     96.64% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::10       625881      1.27%     97.91% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::11       353863      0.72%     98.62% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::12       678404      1.38%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value           12                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total     49326819                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0                       # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass         8552      0.01%      0.01% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu     16612803     12.45%     12.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult         9233      0.01%     12.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv           15      0.00%     12.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     26926737     20.18%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     32.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu      2333015      1.75%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            2      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           18      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     34.40% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     16445265     12.33%     46.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     46.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     46.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     46.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv       222538      0.17%     46.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     46.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     21424385     16.06%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     62.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead       872180      0.65%     63.60% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite      1698673      1.27%     64.87% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     32061501     24.03%     88.91% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     14802298     11.09%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    133417215                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         2.699314                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   0                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate               0                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.instsAddedPerPart    143944591      0.00%      0.00% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsInTheIQ            30                       # Number of instructions in the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart           24      0.00%      0.00% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.partIQFull               0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQBecomesFull            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.intInstQueueReads     68196145                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites     10469602                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses      9401872                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    247977100                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    152722317                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    123462701                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses      9425677                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    123982986                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts       297487                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             816                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           99531                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     35850333                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     18388284                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads     21712153                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      9116711                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return       122848     22.56%     22.56% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect       121575     22.32%     44.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect           10      0.00%     44.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond       293007     53.80%     98.68% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond         7052      1.29%     99.97% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.97% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond          147      0.03%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total       544639                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return        19633     27.96%     27.96% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect        18365     26.15%     54.11% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            6      0.01%     54.12% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        30797     43.86%     97.98% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond         1296      1.85%     99.82% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.82% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond          126      0.18%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        70223                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return          213      1.48%      1.48% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          132      0.92%      2.40% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            4      0.03%      2.43% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond        13904     96.81%     99.24% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           84      0.58%     99.83% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.83% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           25      0.17%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total        14362                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return       103211     21.76%     21.76% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect       103207     21.75%     43.51% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            4      0.00%     43.51% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond       262207     55.27%     98.78% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond         5756      1.21%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           21      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total       474406                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            2      0.01%      0.01% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           62      0.45%      0.47% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            4      0.03%      0.49% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond        13607     99.05%     99.54% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           42      0.31%     99.85% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.85% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           21      0.15%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total        13738                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget        25304      4.65%      4.65% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB       396490     72.80%     77.44% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS       122843     22.55%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            2      0.00%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total       544639                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch         3106     21.66%     21.66% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        11024     76.87%     98.53% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          211      1.47%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total        14341                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted       293007                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken       269249                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect        14362                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          281                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         3333                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        11029                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups       544639                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         3091                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits       403597                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.741036                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          418                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups          157                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            2                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          155                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return       122848     22.56%     22.56% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect       121575     22.32%     44.88% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect           10      0.00%     44.88% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond       293007     53.80%     98.68% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond         7052      1.29%     99.97% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.97% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond          147      0.03%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total       544639                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return       122848     87.10%     87.10% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          222      0.16%     87.26% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect           10      0.01%     87.26% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond        17677     12.53%     99.80% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          138      0.10%     99.90% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     99.90% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond          147      0.10%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total       141042                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          132      4.27%      4.27% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      4.27% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond         2875     93.01%     97.28% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond           84      2.72%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total         3091                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          132      4.27%      4.27% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      4.27% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond         2875     93.01%     97.28% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond           84      2.72%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total         3091                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups          157                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            2                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          155                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           29                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords          186                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes       141218                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops       141219                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes        38004                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used       103211                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct       103209                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            2                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts     19107954                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            7                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts        14145                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     46487093                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     2.685394                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     3.848566                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     20636442     44.39%     44.39% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1      7105606     15.29%     59.68% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      3043454      6.55%     66.22% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      2425897      5.22%     71.44% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      4063779      8.74%     80.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      1155231      2.49%     82.67% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      1359760      2.93%     85.59% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7       492837      1.06%     86.65% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8       435667      0.94%     87.59% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::9       331966      0.71%     88.31% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::10       338686      0.73%     89.03% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::11       306842      0.66%     89.69% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::12      4790926     10.31%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value           12                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     46487093                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            4                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls       103211                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass         6620      0.01%      0.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu     15308547     12.26%     12.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult         8317      0.01%     12.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv           14      0.00%     12.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     23242692     18.62%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     30.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu      2294168      1.84%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            2      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           18      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     32.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     16163240     12.95%     45.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     45.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     45.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     45.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv       211296      0.17%     45.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     45.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     20643112     16.54%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     62.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead       837063      0.67%     63.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite      1648284      1.32%     64.38% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     29942298     23.99%     88.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite     14530488     11.64%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    124836159                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      4790926                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts     85437063                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    124836159                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP     85437063                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    124836159                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.578512                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.728573                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     46958133                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    116037473                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     53263626                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     30779361                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     16178772                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass         6620      0.01%      0.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     15308547     12.26%     12.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult         8317      0.01%     12.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv           14      0.00%     12.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     23242692     18.62%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     30.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu      2294168      1.84%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            2      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           18      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     32.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     16163240     12.95%     45.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     45.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     45.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     45.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv       211296      0.17%     45.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     45.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     20643112     16.54%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     62.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead       837063      0.67%     63.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      1648284      1.32%     64.38% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     29942298     23.99%     88.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite     14530488     11.64%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    124836159                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl       474406                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl       371170                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl       103236                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl       262207                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl       212199                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall       103211                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn       103211                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      2626723                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     30300513                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles     10097608                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles      6172420                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles       129551                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved       388803                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          219                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    146088805                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         1231                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    133119721                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches       508201                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     32803889                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     16476688                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     2.693295                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads      1380851                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites      3545851                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegReads    153197110                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    108793522                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     57315883                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites      6916713                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     49280577                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads     50782817                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches       519335                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles      49080171                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles       259536                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles         2581                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles           18                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         3632                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     10297087                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          497                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples     49326819                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     3.017309                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     4.007968                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0     27915592     56.59%     56.59% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1      1166747      2.37%     58.96% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      1283894      2.60%     61.56% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3      1517828      3.08%     64.64% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4      1944961      3.94%     68.58% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5      1577379      3.20%     71.78% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6      1585693      3.21%     74.99% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7      1643478      3.33%     78.33% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8      1088239      2.21%     80.53% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::9       874977      1.77%     82.31% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::10      8728031     17.69%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value           10                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total     49326819                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    101779407                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.059213                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches       544639                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.011019                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       110649                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles       129551                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles      2710175                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles      1092092                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    143944591                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts         3906                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     35850333                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     18388284                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           30                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ (or every part of it) has become full , causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      1090827                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents       140367                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        11284                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect         2979                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts        14263                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    132979858                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    132864573                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst     80006727                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    133186937                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        2.688132                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.600710                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.interrupts.clk_domain.clock         5328                       # Clock period in ticks (Tick)
board.processor.cores.core.lsq0.forwLoads     10902144                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads      5070964                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses         5499                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation       140367                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores      2209508                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache         1701                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     30779361                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     3.764663                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    10.434433                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     30263261     98.32%     98.32% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19       233813      0.76%     99.08% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29        32841      0.11%     99.19% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39       156822      0.51%     99.70% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49         4960      0.02%     99.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59          991      0.00%     99.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69          929      0.00%     99.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79          985      0.00%     99.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89          570      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99          452      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109          384      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119           84      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129          139      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139          240      0.00%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149         2691      0.01%     99.74% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159        59297      0.19%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169         6341      0.02%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179          894      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189          749      0.00%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199         4124      0.01%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209         1486      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219          238      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229          574      0.00%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239         3242      0.01%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249         2206      0.01%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259           40      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            5      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299           27      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows          970      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         1300                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     30779361                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.rdAccesses     32787336                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrAccesses     16476688                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.dtb.rdMisses        50647                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrMisses         2269                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.rdAccesses            0                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.itb.wrAccesses     10297089                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.itb.rdMisses            0                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.itb.wrMisses           14                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 126691000848                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles       129551                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      4592028                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles     13431621                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles     13151806                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles     18021809                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    145243320                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents      9647831                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.SQFullEvents      6360506                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands    135258039                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups    357803266                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     63027612                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    173016840                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps    116510659                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps     18747277                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts     45663475                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        185640280                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       290746034                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts     85437063                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    124836159                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
