
---------- Begin Simulation Statistics ----------
simSeconds                                   0.034896                       # Number of seconds simulated (Second)
simTicks                                  34895735667                       # Number of ticks simulated (Tick)
finalTick                                485990194329                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                   1182.83                       # Real time elapsed on the host (Second)
hostTickRate                                 29501942                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1855588                       # Number of bytes of host memory used (Byte)
simInsts                                   1083732333                       # Number of instructions simulated (Count)
simOps                                     1659636717                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   916221                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1403108                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.dptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.iptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.demandHits::processor.cores.core.data     47349744                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandHits::total     47349744                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::processor.cores.core.data     47349744                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::total     47349744                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::processor.cores.core.data     13563197                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::total     13563197                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::processor.cores.core.data     13563197                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::total     13563197                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::processor.cores.core.data  64272596254                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::total  64272596254                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::processor.cores.core.data  64272596254                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::total  64272596254                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::processor.cores.core.data     60912941                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::total     60912941                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::processor.cores.core.data     60912941                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::total     60912941                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::processor.cores.core.data     0.222665                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::total     0.222665                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::processor.cores.core.data     0.222665                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::total     0.222665                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::processor.cores.core.data  4738.749740                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::total  4738.749740                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::processor.cores.core.data  4738.749740                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::total  4738.749740                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_targets      5158898                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_targets       311339                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_targets    16.570035                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.writebacks::writebacks      5526441                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.writebacks::total      5526441                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::processor.cores.core.data      7415431                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::total      7415431                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::processor.cores.core.data      7415431                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::total      7415431                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::processor.cores.core.data      6147766                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::total      6147766                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::processor.cores.core.data      6147766                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::total      6147766                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::processor.cores.core.data  24719882893                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::total  24719882893                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::processor.cores.core.data  24719882893                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::total  24719882893                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::processor.cores.core.data     0.100927                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::total     0.100927                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::processor.cores.core.data     0.100927                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::total     0.100927                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::processor.cores.core.data  4020.953773                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::total  4020.953773                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::processor.cores.core.data  4020.953773                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::total  4020.953773                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.replacements      6015655                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::processor.cores.core.data           46                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::total           46                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.misses::processor.cores.core.data            2                       # number of LockedRMWReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.misses::total            2                       # number of LockedRMWReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.missLatency::processor.cores.core.data        68265                       # number of LockedRMWReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.missLatency::total        68265                       # number of LockedRMWReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::processor.cores.core.data           48                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::total           48                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.missRate::processor.cores.core.data     0.041667                       # miss rate for LockedRMWReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.missRate::total     0.041667                       # miss rate for LockedRMWReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMissLatency::processor.cores.core.data 34132.500000                       # average LockedRMWReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMissLatency::total 34132.500000                       # average LockedRMWReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMisses::processor.cores.core.data            2                       # number of LockedRMWReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMisses::total            2                       # number of LockedRMWReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::processor.cores.core.data       261405                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::total       261405                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissRate::processor.cores.core.data     0.041667                       # mshr miss rate for LockedRMWReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissRate::total     0.041667                       # mshr miss rate for LockedRMWReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::processor.cores.core.data 130702.500000                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::total 130702.500000                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::processor.cores.core.data           48                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::total           48                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::processor.cores.core.data           48                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::total           48                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::processor.cores.core.data     20629054                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::total     20629054                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::processor.cores.core.data     10431876                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::total     10431876                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::processor.cores.core.data  52619298030                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::total  52619298030                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::processor.cores.core.data     31060930                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::total     31060930                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::processor.cores.core.data     0.335852                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::total     0.335852                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::processor.cores.core.data  5044.087759                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::total  5044.087759                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::processor.cores.core.data      7415343                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::total      7415343                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::processor.cores.core.data      3016533                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::total      3016533                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::processor.cores.core.data  14109567975                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::total  14109567975                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.097117                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::total     0.097117                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data  4677.412107                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::total  4677.412107                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::processor.cores.core.data     26720690                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::total     26720690                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::processor.cores.core.data      3131321                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::total      3131321                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::processor.cores.core.data  11653298224                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::total  11653298224                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::processor.cores.core.data     29852011                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::total     29852011                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::processor.cores.core.data     0.104895                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::total     0.104895                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::processor.cores.core.data  3721.527823                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::total  3721.527823                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::processor.cores.core.data           88                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::total           88                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::processor.cores.core.data      3131233                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::total      3131233                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::processor.cores.core.data  10610314918                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::total  10610314918                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.104892                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::total     0.104892                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data  3388.542123                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::total  3388.542123                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.tagsInUse          512                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.tags.totalRefs     53521365                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.sampledRefs      6016167                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.avgRefs     8.896257                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1dcache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.occupancies::processor.cores.core.data          512                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::processor.cores.core.data            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::0           59                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::1          429                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::2           24                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1dcache.tags.tagAccesses    493319951                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.dataAccesses    493319951                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.demandHits::processor.cores.core.inst     22768567                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.demandHits::total     22768567                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::processor.cores.core.inst     22768567                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::total     22768567                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::processor.cores.core.inst         1865                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::total         1865                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::processor.cores.core.inst         1865                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::total         1865                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::processor.cores.core.inst     29345953                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::total     29345953                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::processor.cores.core.inst     29345953                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::total     29345953                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandAccesses::processor.cores.core.inst     22770432                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandAccesses::total     22770432                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::processor.cores.core.inst     22770432                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::total     22770432                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissRate::processor.cores.core.inst     0.000082                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMissRate::total     0.000082                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::processor.cores.core.inst     0.000082                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::total     0.000082                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::processor.cores.core.inst 15735.095442                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::total 15735.095442                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::processor.cores.core.inst 15735.095442                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::total 15735.095442                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_mshrs          109                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_targets         6111                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_mshrs            2                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_targets          118                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_mshrs    54.500000                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_targets    51.788136                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.demandMshrHits::processor.cores.core.inst          118                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrHits::total          118                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::processor.cores.core.inst          118                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::total          118                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::processor.cores.core.inst         1747                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::total         1747                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::processor.cores.core.inst         1747                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::total         1747                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::processor.cores.core.inst     26689612                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::total     26689612                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::processor.cores.core.inst     26689612                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::total     26689612                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::processor.cores.core.inst     0.000077                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::total     0.000077                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::processor.cores.core.inst     0.000077                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::total     0.000077                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::processor.cores.core.inst 15277.396680                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::total 15277.396680                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::processor.cores.core.inst 15277.396680                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::total 15277.396680                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.replacements         1746                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::processor.cores.core.inst     22768567                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::total     22768567                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::processor.cores.core.inst         1865                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::total         1865                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::processor.cores.core.inst     29345953                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::total     29345953                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::processor.cores.core.inst     22770432                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::total     22770432                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::processor.cores.core.inst     0.000082                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::total     0.000082                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::processor.cores.core.inst 15735.095442                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::total 15735.095442                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::processor.cores.core.inst          118                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::total          118                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::processor.cores.core.inst         1747                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::total         1747                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::processor.cores.core.inst     26689612                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::total     26689612                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000077                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::total     0.000077                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 15277.396680                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::total 15277.396680                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.tags.tagsInUse   510.000210                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.tags.totalRefs     57507876                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.sampledRefs         2258                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.avgRefs 25468.501329                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1icache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1icache.tags.occupancies::processor.cores.core.inst   510.000210                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::processor.cores.core.inst     0.996094                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::total     0.996094                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::0           98                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::1          339                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::4           75                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1icache.tags.tagAccesses    182165204                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.dataAccesses    182165204                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadResp      3018267                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::WritebackDirty      6188878                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::CleanEvict       557728                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeReq       132114                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeResp       132114                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExReq      2999136                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExResp      2999136                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadCleanReq         1747                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadSharedReq      3016519                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port     18311193                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port         5241                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount::total     18316434                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port    738694144                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port       111872                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize::total    738806016                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.snoops       729205                       # Total snoops (Count)
board.cache_hierarchy.clusters.l2_bus.snoopTraffic     42395968                       # Total snoop traffic (Byte)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::samples      6878721                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::mean     0.000058                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::stdev     0.007635                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::0      6878320     99.99%     99.99% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::1          401      0.01%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::total      6878721                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.occupancy   7732193067                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer0.occupancy   6053633307                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer1.occupancy      1749240                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totRequests     12166917                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleRequests      6149515                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totSnoops          401                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleSnoops          401                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.inst          843                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.data      5287355                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::total      5288198                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.inst          843                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.data      5287355                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::total      5288198                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.inst          904                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.data       728300                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::total       729204                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.inst          904                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.data       728300                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::total       729204                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.inst     23534775                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.data   7200405387                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::total   7223940162                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.inst     23534775                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.data   7200405387                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::total   7223940162                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.inst         1747                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.data      6015655                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::total      6017402                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.inst         1747                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.data      6015655                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::total      6017402                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.inst     0.517459                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.data     0.121067                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::total     0.121183                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.inst     0.517459                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.data     0.121067                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::total     0.121183                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.inst 26034.043142                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.data  9886.592595                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::total  9906.610718                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.inst 26034.043142                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.data  9886.592595                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::total  9906.610718                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.writebacks::writebacks       662437                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.writebacks::total       662437                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.inst          904                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.data       728300                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::total       729204                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.inst          904                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.data       728300                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::total       729204                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.inst     22630680                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.data   6472833687                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::total   6495464367                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.inst     22630680                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.data   6472833687                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::total   6495464367                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.inst     0.517459                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.data     0.121067                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::total     0.121183                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.inst     0.517459                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.data     0.121067                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::total     0.121183                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 25033.938053                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.data  8887.592595                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::total  8907.609348                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 25033.938053                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.data  8887.592595                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::total  8907.609348                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.replacements       729205                       # number of replacements (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::writebacks          495                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::total          495                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.hits::processor.cores.core.inst          843                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.hits::total          843                       # number of ReadCleanReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::processor.cores.core.inst          904                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::total          904                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::processor.cores.core.inst     23534775                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::total     23534775                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::processor.cores.core.inst         1747                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::total         1747                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::processor.cores.core.inst     0.517459                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::total     0.517459                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::processor.cores.core.inst 26034.043142                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::total 26034.043142                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::processor.cores.core.inst          904                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::total          904                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::processor.cores.core.inst     22630680                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::total     22630680                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::processor.cores.core.inst     0.517459                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::total     0.517459                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 25033.938053                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::total 25033.938053                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::processor.cores.core.data      2864666                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::total      2864666                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::processor.cores.core.data       134470                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::total       134470                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::processor.cores.core.data   1356539103                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::total   1356539103                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::processor.cores.core.data      2999136                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::total      2999136                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::processor.cores.core.data     0.044836                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::total     0.044836                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 10088.042708                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::total 10088.042708                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::processor.cores.core.data       134470                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::total       134470                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   1222203573                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::total   1222203573                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.044836                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::total     0.044836                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data  9089.042708                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::total  9089.042708                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::processor.cores.core.data      2422689                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::total      2422689                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::processor.cores.core.data       593830                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::total       593830                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::processor.cores.core.data   5843866284                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::total   5843866284                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::processor.cores.core.data      3016519                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::total      3016519                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.196859                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::total     0.196859                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data  9840.975168                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::total  9840.975168                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data       593830                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::total       593830                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data   5250630114                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::total   5250630114                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.196859                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::total     0.196859                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data  8841.975168                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::total  8841.975168                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::processor.cores.core.data       132114                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::total       132114                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::processor.cores.core.data       132114                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::total       132114                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::writebacks      5526441                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::total      5526441                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::writebacks      5526441                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::total      5526441                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2cache.tags.tagsInUse        16384                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.tags.totalRefs     14267357                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.sampledRefs       745589                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.avgRefs    19.135686                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l2cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.inst     4.859571                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.data 16379.140429                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.inst     0.000297                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.data     0.999703                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::total            1                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupanciesTaskId::1024        16384                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::0          141                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::1         1196                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::2        11873                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::3         2897                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::4          277                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l2cache.tags.tagAccesses    195399877                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.dataAccesses    195399877                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.transDist::ReadResp       594735                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::WritebackDirty       662437                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::CleanEvict        66862                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExReq       134470                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExResp       134470                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadSharedReq       594734                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.pktCount_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port      2187708                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l3_bus.pktSize_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port     89065088                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l3_bus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.l3_bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l3_bus.snoopFanout::samples       729204                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::0       729204    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::total       729204                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.occupancy    926864541                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.respLayer0.occupancy    728475795                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.snoop_filter.totRequests      1458503                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleRequests       729299                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.inst          633                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.data       728119                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::total       728752                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.inst          633                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.data       728119                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::total       728752                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.inst          271                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.data          181                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::total          452                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.inst          271                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.data          181                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::total          452                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.inst     16674642                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.data     11199123                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::total     27873765                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.inst     16674642                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.data     11199123                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::total     27873765                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.inst          904                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.data       728300                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::total       729204                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.inst          904                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.data       728300                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::total       729204                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.inst     0.299779                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.data     0.000249                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::total     0.000620                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.inst     0.299779                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.data     0.000249                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::total     0.000620                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.inst 61530.044280                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.data 61873.607735                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::total 61667.621681                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.inst 61530.044280                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.data 61873.607735                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::total 61667.621681                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.inst          271                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.data          181                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::total          452                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.inst          271                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.data          181                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::total          452                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.inst     15772212                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.data     10596393                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::total     26368605                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.inst     15772212                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.data     10596393                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::total     26368605                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.inst     0.299779                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.data     0.000249                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::total     0.000620                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.inst     0.299779                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.data     0.000249                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::total     0.000620                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.inst 58200.044280                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.data 58543.607735                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::total 58337.621681                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.inst 58200.044280                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.data 58543.607735                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::total 58337.621681                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::processor.cores.core.data       134374                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::total       134374                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::processor.cores.core.data           96                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::total           96                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::processor.cores.core.data      5971023                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::total      5971023                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::processor.cores.core.data       134470                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::total       134470                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::processor.cores.core.data     0.000714                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::total     0.000714                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::processor.cores.core.data 62198.156250                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::total 62198.156250                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::processor.cores.core.data           96                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::total           96                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::processor.cores.core.data      5651343                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::total      5651343                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.000714                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::total     0.000714                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 58868.156250                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::total 58868.156250                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.inst          633                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.data       593745                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::total       594378                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.inst          271                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.data           85                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::total          356                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.inst     16674642                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.data      5228100                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::total     21902742                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.inst          904                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.data       593830                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::total       594734                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.inst     0.299779                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.data     0.000143                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::total     0.000599                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 61530.044280                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 61507.058824                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::total 61524.556180                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.inst          271                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.data           85                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::total          356                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst     15772212                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data      4945050                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::total     20717262                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.299779                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.000143                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::total     0.000599                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 58200.044280                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 58177.058824                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::total 58194.556180                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.WritebackDirty.hits::writebacks       662437                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.hits::total       662437                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::writebacks       662437                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::total       662437                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_cache.tags.tagsInUse 333417.384331                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l3_cache.tags.totalRefs      8729019                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.sampledRefs       333869                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.avgRefs    26.145042                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l3_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.inst   801.241048                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.data 332616.143283                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.inst     0.000382                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.data     0.158604                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::total     0.158986                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.occupanciesTaskId::1024       333869                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::0          140                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::1          312                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::4       333417                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ratioOccsTaskId::1024     0.159201                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l3_cache.tags.tagAccesses     23336500                       # Number of tag accesses (Count)
board.cache_hierarchy.l3_cache.tags.dataAccesses     23336500                       # Number of data accesses (Count)
board.cache_hierarchy.l3_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp          356                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq           96                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp           96                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq          356                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port          456                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port          448                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::total          904                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total          904                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port        14592                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port        14336                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::total        28928                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        28928                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          452                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          452    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          452                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy        75924                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.reqLayer1.occupancy        74592                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy       383033                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests          452                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.inst::samples       131.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.data::samples        97.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl0.priorityMaxLatency 0.000000728414                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl0.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl0.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl0.numStayReadState          9419                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl0.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl0.readReqs                   228                       # Number of read requests accepted (Count)
board.memory.mem_ctrl0.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl0.readBursts                 228                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl0.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl0.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl0.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl0.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl0.avgRdQLen                 1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl0.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl0.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::6             228                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.rdQLenPdf::0               184                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::1                37                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::2                 6                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::3                 1                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::4                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::5                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::6                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl0.bytesReadSys             14592                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl0.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl0.avgRdBWSys        418159.97631479                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.totGap             34896015387                       # Total gap between requests (Tick)
board.memory.mem_ctrl0.avgGap            153052699.07                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.inst         8384                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.data         6208                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.inst 240258.582882622344                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.data 177901.393432170735                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.inst          131                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.data           97                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.inst      4457795                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.data      3477087                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.inst     34028.97                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.data     35846.26                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.inst         8384                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.data         6208                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::total        14592                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::processor.cores.core.inst         8384                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::total         8384                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.inst          131                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.data           97                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::total          228                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.inst       240259                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.data       177901                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::total       418160                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::processor.cores.core.inst       240259                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::total       240259                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.inst       240259                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.data       177901                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::total       418160                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.readBursts            228                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl0.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::0            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::1           36                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::2            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::3           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::4            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::5            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::6            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::7            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::9            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::11           13                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::12            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::13           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::14           41                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::15           21                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::16           19                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::17            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::20            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::24           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::25            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::27            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.totQLat           3946706                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl0.dram.totBusLat          759696                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl0.dram.totMemAccLat      7934882                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl0.dram.avgQLat          17310.11                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgMemAccLat     34802.11                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.readRowHits           134                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl0.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl0.dram.readRowHitRate        58.77                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl0.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl0.dram.bytesPerActivate::samples           81                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::mean   144.592593                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::gmean   107.818318                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::stdev   150.017480                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::64-127           45     55.56%     55.56% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::128-191           16     19.75%     75.31% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::192-255            4      4.94%     80.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::256-319            7      8.64%     88.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::320-383            6      7.41%     96.30% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::576-639            1      1.23%     97.53% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::832-895            1      1.23%     98.77% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::896-959            1      1.23%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::total           81                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.dramBytesRead        14592                       # Total bytes read (Byte)
board.memory.mem_ctrl0.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl0.dram.avgRdBW          0.418160                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl0.dram.busUtil              0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl0.dram.busUtilRead          0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl0.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl0.dram.pageHitRate         58.77                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl0.dram.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl0.dram.rank0.actEnergy 120071.952000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preEnergy 181691.294400                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.readEnergy 507436.944000                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.refreshEnergy 3029184573.307189                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actBackEnergy 742053038.008742                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preBackEnergy 10879957203.629156                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.totalEnergy 14652004015.135397                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.averagePower   419.879499                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::IDLE  33272726227                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::REF   1568700000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT     61262147                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.actEnergy 31187.520000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preEnergy 41293.476000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.readEnergy 126173.510400                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.refreshEnergy 3029184573.307189                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actBackEnergy 733544860.641542                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preBackEnergy 10883670965.529959                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.totalEnergy 14646599053.984997                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.averagePower   419.724610                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::IDLE  33284090302                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::REF   1568700000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT     43281029                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.inst::samples       140.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.data::samples        84.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl1.priorityMaxLatency 0.000000728068                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl1.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl1.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl1.numStayReadState          9411                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl1.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl1.readReqs                   224                       # Number of read requests accepted (Count)
board.memory.mem_ctrl1.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl1.readBursts                 224                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl1.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl1.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl1.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl1.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl1.avgRdQLen                 1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl1.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl1.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::6             224                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.rdQLenPdf::0               189                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::1                31                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::2                 4                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::3                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::4                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::5                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::6                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl1.bytesReadSys             14336                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl1.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl1.avgRdBWSys        410823.83637945                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.totGap             34895887182                       # Total gap between requests (Tick)
board.memory.mem_ctrl1.avgGap            155785210.63                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.inst         8960                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.data         5376                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.inst 256764.897737153631                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.data 154058.938642292196                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.inst          140                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.data           84                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.inst      3948259                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.data      2200697                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.inst     28201.85                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.data     26198.77                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.inst         8960                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.data         5376                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::total        14336                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::processor.cores.core.inst         8960                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::total         8960                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.inst          140                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.data           84                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::total          224                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.inst       256765                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.data       154059                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::total       410824                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::processor.cores.core.inst       256765                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::total       256765                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.inst       256765                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.data       154059                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::total       410824                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.readBursts            224                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl1.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::0            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::1           37                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::2            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::3           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::5            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::6            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::7            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::10            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::11           13                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::13           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::14           34                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::15           19                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::16           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::17            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::23            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::24           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::25            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.totQLat           2230748                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl1.dram.totBusLat          746368                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl1.dram.totMemAccLat      6148956                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl1.dram.avgQLat           9958.70                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgMemAccLat     27450.70                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.readRowHits           132                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl1.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl1.dram.readRowHitRate        58.93                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl1.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl1.dram.bytesPerActivate::samples           80                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::mean   142.400000                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::gmean   107.604026                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::stdev   139.614805                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::64-127           45     56.25%     56.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::128-191           13     16.25%     72.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::192-255            8     10.00%     82.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::256-319            5      6.25%     88.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::320-383            5      6.25%     95.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::384-447            1      1.25%     96.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::448-511            1      1.25%     97.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::768-831            1      1.25%     98.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::832-895            1      1.25%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::total           80                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.dramBytesRead        14336                       # Total bytes read (Byte)
board.memory.mem_ctrl1.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl1.dram.avgRdBW          0.410824                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl1.dram.busUtil              0.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl1.dram.busUtilRead          0.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl1.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl1.dram.pageHitRate         58.93                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl1.dram.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.dram.rank0.actEnergy 118512.576000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preEnergy 178938.396000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.readEnergy 504694.041600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.refreshEnergy 3029184573.307189                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actBackEnergy 742859627.243942                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preBackEnergy 10878211934.016359                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.totalEnergy 14651058279.580999                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.averagePower   419.852397                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::IDLE  33267365167                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::REF   1568700000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT     62982518                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.actEnergy 28068.768000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preEnergy 41293.476000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.readEnergy 115201.900800                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.refreshEnergy 3029184573.307189                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actBackEnergy 731298777.434342                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preBackEnergy 10885111988.889963                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.totalEnergy 14645779903.776196                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.averagePower   419.701136                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::IDLE  33295588861                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::REF   1568700000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT     38503467                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles        104791999                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.579904                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.724422                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       349732927                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          470                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      283280504                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued     19219982                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined     72961505                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    222511914                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved          325                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples    104774418                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     2.703718                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.337444                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     14883490     14.21%     14.21% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1      3107982      2.97%     17.17% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2     15096279     14.41%     31.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3     36873474     35.19%     66.77% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4     34706442     33.12%     99.90% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5       106747      0.10%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::9            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::10            2      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::11            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::12            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value           12                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total    104774418                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu     87317907     35.56%     35.56% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult        40198      0.02%     35.57% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv         1381      0.00%     35.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd     67493468     27.49%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     63.06% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu        85801      0.03%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            5      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc          141      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     63.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd     15502506      6.31%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            3      0.00%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            1      0.00%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     69.41% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult     16002413      6.52%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     75.93% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      7100354      2.89%     78.82% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite      1019138      0.42%     79.23% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead     48771229     19.86%     99.09% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite      2226966      0.91%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass       420535      0.15%      0.15% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    145925194     51.51%     51.66% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult       114258      0.04%     51.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv        59444      0.02%     51.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     22230151      7.85%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     59.57% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu       104696      0.04%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt           66      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc          499      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     30034751     10.60%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt           79      0.00%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv           31      0.00%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     70.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     20993474      7.41%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            6      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     77.62% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead      7931888      2.80%     80.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite      4718204      1.67%     82.09% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     25563840      9.02%     91.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     25183388      8.89%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    283280504                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         2.703265                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy           245561511                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.866849                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.instsAddedPerPart::IQ_part_0     88795922     25.39%     25.39% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_1     87689643     25.07%     50.46% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_2     86988467     24.87%     75.34% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_3     86259365     24.66%    100.00% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::total    349733397                       # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsInTheIQ             0                       # Number of instructions in the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_0            0                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_1            0                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_2            0                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_3            0                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::total            0                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.intInstQueueReads    427169085                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites    186809519                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    116819911                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    508947834                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    235893213                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    163783903                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    188067380                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    340354100                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts       154033                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             380                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           17581                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     39884151                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     38536264                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads       463604                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores       181341                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            9      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return        15765      0.11%      0.11% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect        14634      0.10%      0.21% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect          354      0.00%      0.21% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond     14311816     98.77%     98.99% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond       140482      0.97%     99.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond         6258      0.04%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total     14489318                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            9      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return        10433      0.23%      0.23% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect         9423      0.21%      0.44% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect          233      0.01%      0.45% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond      4393920     98.30%     98.75% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond        50049      1.12%     99.87% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.87% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond         5649      0.13%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total      4469716                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            3      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            4      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          224      0.07%      0.07% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           28      0.01%      0.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond       340687     99.36%     99.43% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond         1778      0.52%     99.95% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.95% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          173      0.05%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total       342897                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return         5334      0.05%      0.05% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect         5211      0.05%      0.11% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect          121      0.00%      0.11% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      9917890     98.98%     99.09% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        90430      0.90%     99.99% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.99% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond          609      0.01%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total     10019595                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            3      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           98      0.03%      0.03% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           27      0.01%      0.04% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond       340024     99.68%     99.71% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond          810      0.24%     99.95% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.95% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          170      0.05%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total       341132                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget       977555      6.75%      6.75% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB     13495062     93.14%     99.88% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS        15761      0.11%     99.99% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect          940      0.01%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total     14489318                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch        72182     21.08%     21.08% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return       270178     78.90%     99.98% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            1      0.00%     99.98% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect           60      0.02%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total       342421                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted     14311822                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken     13381491                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect       342897                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          463                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted        75659                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted       267238                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups     14489318                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates        75451                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits     13825909                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.954214                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          621                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups         6612                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits          940                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses         5672                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            9      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return        15765      0.11%      0.11% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect        14634      0.10%      0.21% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect          354      0.00%      0.21% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond     14311816     98.77%     98.99% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond       140482      0.97%     99.96% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.96% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond         6258      0.04%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total     14489318                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            9      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return        14020      2.11%      2.11% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          318      0.05%      2.16% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect          336      0.05%      2.21% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond       642276     96.81%     99.03% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          192      0.03%     99.06% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     99.06% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond         6258      0.94%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total       663409                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          224      0.30%      0.30% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.30% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond        73449     97.35%     97.64% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond         1778      2.36%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total        75451                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          224      0.30%      0.30% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.30% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond        73449     97.35%     97.64% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond         1778      2.36%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total        75451                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups         6612                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits          940                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses         5672                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords          201                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords         6813                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes        25421                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops        25421                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes        20089                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used         5334                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct         5331                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            3                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts     72961177                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          145                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts       339273                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     95521536                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     2.897482                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     3.426020                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     33622303     35.20%     35.20% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     10242323     10.72%     45.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     13147195     13.76%     59.68% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      6822623      7.14%     66.83% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      9226564      9.66%     76.49% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      3880451      4.06%     80.55% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      6002481      6.28%     86.83% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      1864505      1.95%     88.78% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8      1360375      1.42%     90.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::9      1895086      1.98%     92.19% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::10      1111674      1.16%     93.36% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::11       814596      0.85%     94.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::12      5531360      5.79%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value           12                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     95521536                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           96                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls         5332                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass       301431      0.11%      0.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    144124933     52.07%     52.18% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult       113061      0.04%     52.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv        59293      0.02%     52.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     21072786      7.61%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     59.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu        96966      0.04%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt           66      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc          462      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     59.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     29886562     10.80%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt           73      0.00%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv           27      0.00%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     70.69% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     20971575      7.58%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            6      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     78.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead      5547518      2.00%     80.27% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite      4685814      1.69%     81.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     24745107      8.94%     90.91% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite     25166224      9.09%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    276771904                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      5531360                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts    180705617                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    276771904                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP    180705617                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    276771904                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.579904                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.724422                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     60144663                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    161786035                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    164585778                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     30292625                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     29852038                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass       301431      0.11%      0.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    144124933     52.07%     52.18% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult       113061      0.04%     52.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv        59293      0.02%     52.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     21072786      7.61%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     59.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu        96966      0.04%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt           66      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc          462      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     59.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     29886562     10.80%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt           73      0.00%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv           27      0.00%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     70.69% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     20971575      7.58%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            6      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     78.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead      5547518      2.00%     80.27% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      4685814      1.69%     81.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     24745107      8.94%     90.91% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite     25166224      9.09%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    276771904                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl     10019595                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl     10013531                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl         6064                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      9917890                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl       101705                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall         5332                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn         5334                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      7991593                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     57392073                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles     18587498                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles     20457174                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles       346080                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved     12982296                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred         3659                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    354784914                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts        14530                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    283126471                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches     10075447                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     33380837                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     29870393                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     2.701795                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads     51013426                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites     85806338                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegReads    258772891                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    138684135                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads    185541797                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     91721649                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     63251230                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads     83484887                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches     13511763                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles     104194058                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles       699446                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          798                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles          405                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles          720                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     22770441                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          705                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples    104774418                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     3.495438                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     4.057129                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0     50111460     47.83%     47.83% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1      1768606      1.69%     49.52% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      6215195      5.93%     55.45% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3      2799101      2.67%     58.12% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4      7533901      7.19%     65.31% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5      3048844      2.91%     68.22% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6      6190152      5.91%     74.13% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7       934808      0.89%     75.02% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8      3086106      2.95%     77.97% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::9       979455      0.93%     78.90% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::10     22106790     21.10%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value           10                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total    104774418                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    236455509                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     2.256427                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches     14489318                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.138267                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       228714                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles       346080                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles      8940660                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles       132037                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    349733397                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts         3728                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     39884151                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     38536264                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts          164                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents          952                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents       127955                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         7911                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect       267889                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect        73122                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts       341011                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    280695376                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    280603814                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst    215669182                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    410085067                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        2.677722                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.525913                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.interrupts.clk_domain.clock         5328                       # Clock period in ticks (Tick)
board.processor.cores.core.lsq0.forwLoads       220838                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads      9591530                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses            6                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         7911                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores      8684226                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            1                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache       269039                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     30292625                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     9.335233                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    14.002448                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     22215759     73.34%     73.34% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19      4987753     16.47%     89.80% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29       538741      1.78%     91.58% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39      1113802      3.68%     95.26% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49       432397      1.43%     96.69% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59       534971      1.77%     98.45% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69       141007      0.47%     98.92% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79        79969      0.26%     99.18% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89       120623      0.40%     99.58% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99        58178      0.19%     99.77% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109        13712      0.05%     99.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119        28663      0.09%     99.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129        18093      0.06%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139         1250      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149         4684      0.02%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159         2504      0.01%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169          337      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179          119      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189           24      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199           21      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249           11      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows            1      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          331                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     30292625                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.rdAccesses     31315977                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrAccesses     29870423                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.dtb.rdMisses        41791                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrMisses        35601                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.rdAccesses            0                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.itb.wrAccesses     22770484                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.itb.rdMisses            0                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.itb.wrMisses           55                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 485990194329                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles       346080                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles     15245138                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles      9667591                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles           68                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles     31634810                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles     47880731                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    352366370                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents           25                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents     34601284                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.SQFullEvents      8918892                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands    575042970                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   1074296678                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups    242930392                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    312333541                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps    448724648                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    126318333                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            7                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            7                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    116824491                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        439723218                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       708720874                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts    180705617                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    276771904                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            3                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
