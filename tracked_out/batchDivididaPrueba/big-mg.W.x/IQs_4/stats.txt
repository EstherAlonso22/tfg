
---------- Begin Simulation Statistics ----------
simSeconds                                   0.050000                       # Number of seconds simulated (Second)
simTicks                                  50000000000                       # Number of ticks simulated (Tick)
finalTick                                491493394004                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                   4624.87                       # Real time elapsed on the host (Second)
hostTickRate                                 10811118                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1913672                       # Number of bytes of host memory used (Byte)
simInsts                                    194621156                       # Number of instructions simulated (Count)
simOps                                      315022822                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                    42081                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                      68115                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.dptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.dptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.dptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.dptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.dptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.iptw_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.clusters.iptw_cache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.iptw_cache.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.iptw_cache.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.iptw_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.demandHits::processor.cores.core.data     75914284                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandHits::total     75914284                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::processor.cores.core.data     75914284                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallHits::total     75914284                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::processor.cores.core.data     11938733                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMisses::total     11938733                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::processor.cores.core.data     11938733                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMisses::total     11938733                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::processor.cores.core.data 277436165290                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMissLatency::total 277436165290                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::processor.cores.core.data 277436165290                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMissLatency::total 277436165290                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::processor.cores.core.data     87853017                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandAccesses::total     87853017                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::processor.cores.core.data     87853017                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.overallAccesses::total     87853017                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::processor.cores.core.data     0.135894                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMissRate::total     0.135894                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::processor.cores.core.data     0.135894                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMissRate::total     0.135894                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::processor.cores.core.data 23238.325649                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMissLatency::total 23238.325649                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::processor.cores.core.data 23238.325649                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMissLatency::total 23238.325649                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_mshrs       233086                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCycles::no_targets     40029332                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_mshrs         5508                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.blockedCauses::no_targets       324499                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_mshrs    42.317720                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.avgBlocked::no_targets   123.357335                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1dcache.writebacks::writebacks      2173208                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.writebacks::total      2173208                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::processor.cores.core.data      8129017                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrHits::total      8129017                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::processor.cores.core.data      8129017                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrHits::total      8129017                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::processor.cores.core.data      3809716                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMisses::total      3809716                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::processor.cores.core.data      3809716                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.overallMshrMisses::total      3809716                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::processor.cores.core.data  69895019185                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissLatency::total  69895019185                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::processor.cores.core.data  69895019185                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissLatency::total  69895019185                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::processor.cores.core.data     0.043365                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandMshrMissRate::total     0.043365                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::processor.cores.core.data     0.043365                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.overallMshrMissRate::total     0.043365                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::processor.cores.core.data 18346.516954                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.demandAvgMshrMissLatency::total 18346.516954                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::processor.cores.core.data 18346.516954                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.overallAvgMshrMissLatency::total 18346.516954                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.replacements      3506012                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::processor.cores.core.data            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.hits::total            2                       # number of LockedRMWReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::processor.cores.core.data            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.accesses::total            2                       # number of LockedRMWReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::processor.cores.core.data         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.mshrMissLatency::total         4995                       # number of LockedRMWReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::processor.cores.core.data          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWReadReq.avgMshrMissLatency::total          inf                       # average LockedRMWReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::processor.cores.core.data            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.hits::total            2                       # number of LockedRMWWriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::processor.cores.core.data            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.LockedRMWWriteReq.accesses::total            2                       # number of LockedRMWWriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::processor.cores.core.data     57946482                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.hits::total     57946482                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::processor.cores.core.data     11236771                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.misses::total     11236771                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::processor.cores.core.data 268692098274                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missLatency::total 268692098274                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::processor.cores.core.data     69183253                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.accesses::total     69183253                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::processor.cores.core.data     0.162420                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.missRate::total     0.162420                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::processor.cores.core.data 23911.860291                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMissLatency::total 23911.860291                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::processor.cores.core.data      8128481                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrHits::total      8128481                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::processor.cores.core.data      3108290                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMisses::total      3108290                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::processor.cores.core.data  61385848371                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissLatency::total  61385848371                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::processor.cores.core.data     0.044928                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.mshrMissRate::total     0.044928                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::processor.cores.core.data 19749.073726                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.ReadReq.avgMshrMissLatency::total 19749.073726                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::processor.cores.core.data     17967802                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.hits::total     17967802                       # number of WriteReq hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::processor.cores.core.data       701962                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.misses::total       701962                       # number of WriteReq misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::processor.cores.core.data   8744067016                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missLatency::total   8744067016                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::processor.cores.core.data     18669764                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.accesses::total     18669764                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::processor.cores.core.data     0.037599                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.missRate::total     0.037599                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::processor.cores.core.data 12456.610210                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMissLatency::total 12456.610210                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::processor.cores.core.data          536                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrHits::total          536                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::processor.cores.core.data       701426                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMisses::total       701426                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::processor.cores.core.data   8509170814                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissLatency::total   8509170814                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::processor.cores.core.data     0.037570                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.mshrMissRate::total     0.037570                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::processor.cores.core.data 12131.245226                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.WriteReq.avgMshrMissLatency::total 12131.245226                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.tagsInUse   511.847062                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1dcache.tags.totalRefs     80033075                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.sampledRefs      3506524                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1dcache.tags.avgRefs    22.824049                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1dcache.tags.warmupTick 441493535862                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1dcache.tags.occupancies::processor.cores.core.data   511.847062                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::processor.cores.core.data     0.999701                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.avgOccs::total     0.999701                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1dcache.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::0          471                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ageTaskId_1024::3           41                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1dcache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1dcache.tags.tagAccesses    706330692                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.dataAccesses    706330692                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1dcache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.demandHits::processor.cores.core.inst     27836196                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.demandHits::total     27836196                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::processor.cores.core.inst     27836196                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.overallHits::total     27836196                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::processor.cores.core.inst          673                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMisses::total          673                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::processor.cores.core.inst          673                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMisses::total          673                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::processor.cores.core.inst     36330959                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMissLatency::total     36330959                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::processor.cores.core.inst     36330959                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMissLatency::total     36330959                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandAccesses::processor.cores.core.inst     27836869                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandAccesses::total     27836869                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::processor.cores.core.inst     27836869                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.overallAccesses::total     27836869                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l1icache.demandMissRate::processor.cores.core.inst     0.000024                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMissRate::total     0.000024                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::processor.cores.core.inst     0.000024                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMissRate::total     0.000024                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::processor.cores.core.inst 53983.594354                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMissLatency::total 53983.594354                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::processor.cores.core.inst 53983.594354                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMissLatency::total 53983.594354                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_mshrs          395                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCycles::no_targets        16119                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_mshrs            3                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.blockedCauses::no_targets          118                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_mshrs   131.666667                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.avgBlocked::no_targets   136.601695                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l1icache.demandMshrHits::processor.cores.core.inst          118                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrHits::total          118                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::processor.cores.core.inst          118                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrHits::total          118                       # number of overall MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::processor.cores.core.inst          555                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMisses::total          555                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::processor.cores.core.inst          555                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.overallMshrMisses::total          555                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::processor.cores.core.inst     30738891                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissLatency::total     30738891                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::processor.cores.core.inst     30738891                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.overallMshrMissLatency::total     30738891                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::processor.cores.core.inst     0.000020                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandMshrMissRate::total     0.000020                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::processor.cores.core.inst     0.000020                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.overallMshrMissRate::total     0.000020                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::processor.cores.core.inst 55385.389189                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.demandAvgMshrMissLatency::total 55385.389189                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::processor.cores.core.inst 55385.389189                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.overallAvgMshrMissLatency::total 55385.389189                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.replacements           88                       # number of replacements (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::processor.cores.core.inst     27836196                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.hits::total     27836196                       # number of ReadReq hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::processor.cores.core.inst          673                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.misses::total          673                       # number of ReadReq misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::processor.cores.core.inst     36330959                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.missLatency::total     36330959                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::processor.cores.core.inst     27836869                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.accesses::total     27836869                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::processor.cores.core.inst     0.000024                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.missRate::total     0.000024                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::processor.cores.core.inst 53983.594354                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMissLatency::total 53983.594354                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::processor.cores.core.inst          118                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrHits::total          118                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::processor.cores.core.inst          555                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMisses::total          555                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::processor.cores.core.inst     30738891                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissLatency::total     30738891                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::processor.cores.core.inst     0.000020                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.mshrMissRate::total     0.000020                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::processor.cores.core.inst 55385.389189                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.ReadReq.avgMshrMissLatency::total 55385.389189                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l1icache.tags.tagsInUse   453.624768                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l1icache.tags.totalRefs     27836751                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.sampledRefs          555                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l1icache.tags.avgRefs 50156.308108                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l1icache.tags.warmupTick 441493468263                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l1icache.tags.occupancies::processor.cores.core.inst   453.624768                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::processor.cores.core.inst     0.885986                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.avgOccs::total     0.885986                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l1icache.tags.occupanciesTaskId::1024          467                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l1icache.tags.ageTaskId_1024::4          467                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l1icache.tags.ratioOccsTaskId::1024     0.912109                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l1icache.tags.tagAccesses    222695507                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.dataAccesses    222695507                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l1icache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadResp      3108844                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::WritebackDirty      3759739                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::CleanEvict      1870759                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeReq       303193                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::UpgradeResp       303193                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExReq       398236                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadExResp       398236                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadCleanReq          555                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.transDist::ReadSharedReq      3108290                       # Transaction distribution (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port     11125449                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port         1198                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktCount::total     11126647                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1dcache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port    363502912                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize_board.cache_hierarchy.clusters.l1icache.mem_side_port::board.cache_hierarchy.clusters.l2cache.cpu_side_port        35520                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.pktSize::total    363538432                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.clusters.l2_bus.snoops      2124398                       # Total snoops (Count)
board.cache_hierarchy.clusters.l2_bus.snoopTraffic    101537984                       # Total snoop traffic (Byte)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::samples      5934695                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::mean     0.000131                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::stdev     0.011441                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::0      5933918     99.99%     99.99% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::1          777      0.01%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.snoopFanout::total      5934695                       # Request fanout histogram (Count)
board.cache_hierarchy.clusters.l2_bus.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.occupancy   3883728695                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer0.occupancy   3603981744                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.respLayer1.occupancy       555109                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.clusters.l2_bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totRequests      7316411                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleRequests      3809315                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.totSnoops          777                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitSingleSnoops          777                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.clusters.l2_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::processor.cores.core.data      1366471                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.demandHits::total      1366471                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::processor.cores.core.data      1366471                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.overallHits::total      1366471                       # number of overall hits (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.inst          555                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::processor.cores.core.data      2140055                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMisses::total      2140610                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.inst          555                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::processor.cores.core.data      2140055                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMisses::total      2140610                       # number of overall misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.inst     30361941                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::processor.cores.core.data  63491137301                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMissLatency::total  63521499242                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.inst     30361941                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::processor.cores.core.data  63491137301                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMissLatency::total  63521499242                       # number of overall miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.inst          555                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::processor.cores.core.data      3506526                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandAccesses::total      3507081                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.inst          555                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::processor.cores.core.data      3506526                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.overallAccesses::total      3507081                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.inst            1                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::processor.cores.core.data     0.610306                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMissRate::total     0.610368                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.inst            1                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::processor.cores.core.data     0.610306                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMissRate::total     0.610368                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.inst 54706.200000                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::processor.cores.core.data 29667.993253                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMissLatency::total 29674.484956                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.inst 54706.200000                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::processor.cores.core.data 29667.993253                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMissLatency::total 29674.484956                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.clusters.l2cache.writebacks::writebacks      1586531                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.writebacks::total      1586531                       # number of writebacks (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.inst          555                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::processor.cores.core.data      2140055                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMisses::total      2140610                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.inst          555                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::processor.cores.core.data      2140055                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.overallMshrMisses::total      2140610                       # number of overall MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.inst     29807496                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::processor.cores.core.data  61353223355                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissLatency::total  61383030851                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.inst     29807496                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::processor.cores.core.data  61353223355                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.overallMshrMissLatency::total  61383030851                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::processor.cores.core.data     0.610306                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandMshrMissRate::total     0.610368                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.inst            1                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::processor.cores.core.data     0.610306                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.overallMshrMissRate::total     0.610368                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 53707.200000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 28668.993720                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.demandAvgMshrMissLatency::total 28675.485423                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 53707.200000                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 28668.993720                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.overallAvgMshrMissLatency::total 28675.485423                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.replacements      2124398                       # number of replacements (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::writebacks           96                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMisses::total           96                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::processor.cores.core.inst          555                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.misses::total          555                       # number of ReadCleanReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::processor.cores.core.inst     30361941                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missLatency::total     30361941                       # number of ReadCleanReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::processor.cores.core.inst          555                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.accesses::total          555                       # number of ReadCleanReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::processor.cores.core.inst            1                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.missRate::total            1                       # miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::processor.cores.core.inst 54706.200000                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMissLatency::total 54706.200000                       # average ReadCleanReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::processor.cores.core.inst          555                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMisses::total          555                       # number of ReadCleanReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::processor.cores.core.inst     29807496                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissLatency::total     29807496                       # number of ReadCleanReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::processor.cores.core.inst            1                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.mshrMissRate::total            1                       # mshr miss rate for ReadCleanReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::processor.cores.core.inst 53707.200000                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadCleanReq.avgMshrMissLatency::total 53707.200000                       # average ReadCleanReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::processor.cores.core.data        36127                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.hits::total        36127                       # number of ReadExReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::processor.cores.core.data       362109                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.misses::total       362109                       # number of ReadExReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::processor.cores.core.data   7521143328                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missLatency::total   7521143328                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::processor.cores.core.data       398236                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.accesses::total       398236                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::processor.cores.core.data     0.909282                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.missRate::total     0.909282                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 20770.384961                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMissLatency::total 20770.384961                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::processor.cores.core.data       362109                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMisses::total       362109                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   7159396437                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissLatency::total   7159396437                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.909282                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.mshrMissRate::total     0.909282                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 19771.384961                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadExReq.avgMshrMissLatency::total 19771.384961                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::processor.cores.core.data      1330344                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.hits::total      1330344                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::processor.cores.core.data      1777946                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.misses::total      1777946                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::processor.cores.core.data  55969993973                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missLatency::total  55969993973                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::processor.cores.core.data      3108290                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.accesses::total      3108290                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.572001                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.missRate::total     0.572001                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 31480.142801                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMissLatency::total 31480.142801                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      1777946                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMisses::total      1777946                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data  54193826918                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissLatency::total  54193826918                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.572001                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.mshrMissRate::total     0.572001                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 30481.143363                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.ReadSharedReq.avgMshrMissLatency::total 30481.143363                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::processor.cores.core.data       303191                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.hits::total       303191                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.misses::processor.cores.core.data            2                       # number of UpgradeReq misses (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.misses::total            2                       # number of UpgradeReq misses (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::processor.cores.core.data       303193                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.accesses::total       303193                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.missRate::processor.cores.core.data     0.000007                       # miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.missRate::total     0.000007                       # miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMisses::processor.cores.core.data            2                       # number of UpgradeReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMisses::total            2                       # number of UpgradeReq MSHR misses (Count)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMissLatency::processor.cores.core.data        10656                       # number of UpgradeReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMissLatency::total        10656                       # number of UpgradeReq MSHR miss ticks (Tick)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMissRate::processor.cores.core.data     0.000007                       # mshr miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.mshrMissRate::total     0.000007                       # mshr miss rate for UpgradeReq accesses (Ratio)
board.cache_hierarchy.clusters.l2cache.UpgradeReq.avgMshrMissLatency::processor.cores.core.data         5328                       # average UpgradeReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.UpgradeReq.avgMshrMissLatency::total         5328                       # average UpgradeReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::writebacks      2173208                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.hits::total      2173208                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::writebacks      2173208                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.WritebackDirty.accesses::total      2173208                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.clusters.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.clusters.l2cache.tags.tagsInUse 16339.211024                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.clusters.l2cache.tags.totalRefs      7316275                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.sampledRefs      2140782                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.clusters.l2cache.tags.avgRefs     3.417571                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.clusters.l2cache.tags.warmupTick 441493466931                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.clusters.l2cache.tags.occupancies::writebacks     1.674095                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.inst     6.397639                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupancies::processor.cores.core.data 16331.139290                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::writebacks     0.000102                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.inst     0.000390                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::processor.cores.core.data     0.996774                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.avgOccs::total     0.997266                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.clusters.l2cache.tags.occupanciesTaskId::1024        16384                       # Occupied blocks per task id (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::0          413                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::1         3759                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::2        12209                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ageTaskId_1024::3            3                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.clusters.l2cache.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.clusters.l2cache.tags.tagAccesses    119202766                       # Number of tag accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.dataAccesses    119202766                       # Number of data accesses (Count)
board.cache_hierarchy.clusters.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.transDist::ReadResp      1778500                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::WritebackDirty      1586531                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::CleanEvict       537190                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::UpgradeReq            2                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::UpgradeResp            2                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExReq       362109                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadExResp       362109                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.transDist::ReadSharedReq      1778501                       # Transaction distribution (Count)
board.cache_hierarchy.l3_bus.pktCount_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port      6404944                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l3_bus.pktSize_board.cache_hierarchy.clusters.l2cache.mem_side_port::board.cache_hierarchy.l3_cache.cpu_side_port    238536960                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l3_bus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.l3_bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l3_bus.snoopFanout::samples      2140612                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::0      2140612    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.snoopFanout::total      2140612                       # Request fanout histogram (Count)
board.cache_hierarchy.l3_bus.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.occupancy   2476652535                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.respLayer0.occupancy   2138469057                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l3_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l3_bus.snoop_filter.totRequests      4264333                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleRequests      2123723                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l3_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.inst            5                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::processor.cores.core.data      1240810                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.demandHits::total      1240815                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.inst            5                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::processor.cores.core.data      1240810                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.overallHits::total      1240815                       # number of overall hits (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.inst          550                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::processor.cores.core.data       899245                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.demandMisses::total       899795                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.inst          550                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::processor.cores.core.data       899245                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.overallMisses::total       899795                       # number of overall misses (Count)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.inst     28839465                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::processor.cores.core.data  49083117417                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMissLatency::total  49111956882                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.inst     28839465                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::processor.cores.core.data  49083117417                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMissLatency::total  49111956882                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.inst          555                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::processor.cores.core.data      2140055                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandAccesses::total      2140610                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.inst          555                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::processor.cores.core.data      2140055                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.overallAccesses::total      2140610                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.inst     0.990991                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::processor.cores.core.data     0.420197                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMissRate::total     0.420345                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.inst     0.990991                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::processor.cores.core.data     0.420197                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMissRate::total     0.420345                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.inst 52435.390909                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::processor.cores.core.data 54582.585855                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMissLatency::total 54581.273381                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.inst 52435.390909                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::processor.cores.core.data 54582.585855                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMissLatency::total 54581.273381                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l3_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l3_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.inst          550                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::processor.cores.core.data       899245                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMisses::total       899795                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.inst          550                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::processor.cores.core.data       899245                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.overallMshrMisses::total       899795                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.inst     27007965                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::processor.cores.core.data  46088631567                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissLatency::total  46115639532                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.inst     27007965                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::processor.cores.core.data  46088631567                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.overallMshrMissLatency::total  46115639532                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.inst     0.990991                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::processor.cores.core.data     0.420197                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.demandMshrMissRate::total     0.420345                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.inst     0.990991                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::processor.cores.core.data     0.420197                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.overallMshrMissRate::total     0.420345                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.inst 49105.390909                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::processor.cores.core.data 51252.585855                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.demandAvgMshrMissLatency::total 51251.273381                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.inst 49105.390909                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::processor.cores.core.data 51252.585855                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.overallAvgMshrMissLatency::total 51251.273381                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::processor.cores.core.data       274641                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.hits::total       274641                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::processor.cores.core.data        87468                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.misses::total        87468                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::processor.cores.core.data   4631951412                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.missLatency::total   4631951412                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::processor.cores.core.data       362109                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.accesses::total       362109                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::processor.cores.core.data     0.241552                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.missRate::total     0.241552                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::processor.cores.core.data 52955.954315                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMissLatency::total 52955.954315                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::processor.cores.core.data        87468                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMisses::total        87468                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::processor.cores.core.data   4340682972                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissLatency::total   4340682972                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.241552                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.mshrMissRate::total     0.241552                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 49625.954315                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadExReq.avgMshrMissLatency::total 49625.954315                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.inst            5                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::processor.cores.core.data       966169                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.hits::total       966174                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.inst          550                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::processor.cores.core.data       811777                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.misses::total       812327                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.inst     28839465                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::processor.cores.core.data  44451166005                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.missLatency::total  44480005470                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.inst          555                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::processor.cores.core.data      1777946                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.accesses::total      1778501                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.inst     0.990991                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::processor.cores.core.data     0.456581                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.missRate::total     0.456748                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 52435.390909                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 54757.853456                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMissLatency::total 54756.280993                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.inst          550                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::processor.cores.core.data       811777                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMisses::total       812327                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst     27007965                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data  41747948595                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissLatency::total  41774956560                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.990991                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.456581                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.mshrMissRate::total     0.456748                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 49105.390909                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 51427.853456                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.ReadSharedReq.avgMshrMissLatency::total 51426.280993                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l3_cache.UpgradeReq.hits::processor.cores.core.data            2                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l3_cache.UpgradeReq.hits::total            2                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l3_cache.UpgradeReq.accesses::processor.cores.core.data            2                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.UpgradeReq.accesses::total            2                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.hits::writebacks      1586531                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.hits::total      1586531                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::writebacks      1586531                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.WritebackDirty.accesses::total      1586531                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l3_cache.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l3_cache.tags.tagsInUse 621825.399798                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l3_cache.tags.totalRefs      4264333                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.sampledRefs       899795                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l3_cache.tags.avgRefs     4.739227                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l3_cache.tags.warmupTick 441493463268                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.inst   526.255652                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.occupancies::processor.cores.core.data 621299.144146                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.inst     0.000251                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::processor.cores.core.data     0.296259                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.avgOccs::total     0.296509                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l3_cache.tags.occupanciesTaskId::1024       899795                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::3         5417                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ageTaskId_1024::4       894378                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l3_cache.tags.ratioOccsTaskId::1024     0.429056                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l3_cache.tags.tagAccesses     69129123                       # Number of tag accesses (Count)
board.cache_hierarchy.l3_cache.tags.dataAccesses     69129123                       # Number of data accesses (Count)
board.cache_hierarchy.l3_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp       812327                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        87468                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        87468                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq       812327                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port       899790                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port       899800                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l3_cache.mem_side_port::total      1799590                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      1799590                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl0.port     28793280                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::board.memory.mem_ctrl1.port     28793600                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l3_cache.mem_side_port::total     57586880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total     57586880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples       899795                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0       899795    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total       899795                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy    149815035                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.reqLayer1.occupancy    149816700                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy    733553623                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests       899795                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.inst::samples       275.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.data::samples    449620.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl0.priorityMaxLatency 0.000000849976                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl0.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl0.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl0.numStayReadState        910579                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl0.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl0.readReqs                449895                       # Number of read requests accepted (Count)
board.memory.mem_ctrl0.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl0.readBursts              449895                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl0.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl0.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl0.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl0.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl0.avgRdQLen                 1.23                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl0.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl0.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::6          449895                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.rdQLenPdf::0            320709                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::1             83299                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::2             35287                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::3              5879                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::4              3371                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::5               593                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::6               383                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::7               252                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::8               117                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::9                 5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl0.bytesReadSys          28793280                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl0.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl0.avgRdBWSys        575865600.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.totGap             40490990145                       # Total gap between requests (Tick)
board.memory.mem_ctrl0.avgGap                90000.98                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.inst        17600                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.data     28775680                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.inst 352000.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.data 575513600.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.inst          275                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.data       449620                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.inst      5701499                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.data  10874260056                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.inst     20732.72                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.data     24185.45                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.inst        17600                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.data     28775680                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::total     28793280                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::processor.cores.core.inst        17600                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::total        17600                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.inst          275                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.data       449620                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::total       449895                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.inst       352000                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.data    575513600                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::total    575865600                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::processor.cores.core.inst       352000                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::total       352000                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.inst       352000                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.data    575513600                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::total    575865600                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.readBursts         449895                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl0.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::0        14171                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::1        14238                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::2        14161                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::3        14181                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::4        14169                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::5        14157                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::6        14170                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::7        14142                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::8        14149                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::9        14145                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::10        14146                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::11        14149                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::12        14152                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::13        14148                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::14        14139                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::15        14026                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::16        14027                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::17        14019                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::18        14019                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::19        13958                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::20        13896                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::21        13897                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::22        13921                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::23        13922                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::24        13897                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::25        13894                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::26        13891                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::27        14004                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::28        14017                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::29        14019                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::30        14017                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::31        14054                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.totQLat        3010398215                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl0.dram.totBusLat      1499050140                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl0.dram.totMemAccLat  10879961555                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl0.dram.avgQLat           6691.34                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgMemAccLat     24183.34                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.readRowHits        414804                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl0.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl0.dram.readRowHitRate        92.20                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl0.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl0.dram.bytesPerActivate::samples        35091                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::mean   820.531760                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::gmean   663.706490                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::stdev   339.049091                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::0-127         2675      7.62%      7.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::128-255         1696      4.83%     12.46% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::256-383         1273      3.63%     16.08% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::384-511         1588      4.53%     20.61% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::512-639         1127      3.21%     23.82% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::640-767         1008      2.87%     26.69% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::768-895          920      2.62%     29.32% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::896-1023          852      2.43%     31.74% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::1024-1151        23952     68.26%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::total        35091                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.dramBytesRead     28793280                       # Total bytes read (Byte)
board.memory.mem_ctrl0.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl0.dram.avgRdBW        575.865600                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl0.dram.busUtil              3.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl0.dram.busUtilRead          3.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl0.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl0.dram.pageHitRate         92.20                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl0.dram.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl0.dram.rank0.actEnergy 27508952.016001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preEnergy 48563880.674397                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.readEnergy 621111048.163180                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actBackEnergy 10185128768.219196                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preBackEnergy 9288642176.352346                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.totalEnergy 24510623309.405827                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.averagePower   490.212466                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::IDLE  28246475440                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT  19506174560                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.actEnergy 27211111.200001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preEnergy 48038077.079997                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.readEnergy 612907027.084781                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actBackEnergy 10015358669.432795                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preBackEnergy 9405843868.915548                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.totalEnergy 24449027237.693798                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.averagePower   488.980545                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::IDLE  28607853498                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT  19144796502                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.inst::samples       275.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.data::samples    449625.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl1.priorityMaxLatency 0.000000829620                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl1.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl1.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl1.numStayReadState        910732                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl1.numStayWriteState            0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl1.readReqs                449900                       # Number of read requests accepted (Count)
board.memory.mem_ctrl1.writeReqs                    0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl1.readBursts              449900                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl1.writeBursts                  0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl1.servicedByWrQ                0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl1.mergedWrBursts               0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl1.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl1.avgRdQLen                 1.11                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.avgWrQLen                 0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl1.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl1.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::6          449900                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::6              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.rdQLenPdf::0            335896                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::1             68754                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::2             34724                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::3              6227                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::4              3049                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::5               553                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::6               376                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::7               205                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::8               114                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::9                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::0                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::1                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::2                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::3                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::4                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::5                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::6                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::7                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::8                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::9                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::10                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::11                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::12                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::13                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::14                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::15                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::16                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::17                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::18                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::19                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::20                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::21                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::22                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::23                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::24                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::25                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::26                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::27                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::28                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::29                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::30                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::31                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::32                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::33                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::34                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::35                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::36                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::37                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::38                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::39                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::40                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::41                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::42                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::43                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::44                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::45                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::46                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::47                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::48                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::49                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::50                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::51                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::52                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::53                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::54                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::55                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::56                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::57                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::58                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::59                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::60                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::61                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::62                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::63                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::64                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.bytesReadWrQ                 0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl1.bytesReadSys          28793600                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl1.bytesWrittenSys              0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl1.avgRdBWSys        575872000.00000000                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.avgWrBWSys          0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.totGap             40490995806                       # Total gap between requests (Tick)
board.memory.mem_ctrl1.avgGap                89999.99                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.inst        17600                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.data     28776000                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.inst 352000.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.data 575520000.000000000000                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.inst          275                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.data       449625                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.inst      6368010                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.data  10800853320                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.inst     23156.40                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.data     24021.91                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.inst        17600                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.data     28776000                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::total     28793600                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::processor.cores.core.inst        17600                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::total        17600                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.inst          275                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.data       449625                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::total       449900                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.inst       352000                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.data    575520000                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::total    575872000                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::processor.cores.core.inst       352000                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::total       352000                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.inst       352000                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.data    575520000                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::total    575872000                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.readBursts         449900                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl1.dram.writeBursts             0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::0        14171                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::1        14237                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::2        14158                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::3        14184                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::4        14168                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::5        14155                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::6        14170                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::7        14143                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::8        14149                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::9        14145                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::10        14145                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::11        14149                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::12        14152                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::13        14148                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::14        14141                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::15        14030                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::16        14026                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::17        14019                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::18        14020                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::19        13956                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::20        13894                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::21        13901                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::22        13923                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::23        13922                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::24        13898                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::25        13895                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::26        13890                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::27        14005                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::28        14017                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::29        14018                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::30        14017                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::31        14054                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::16            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::25            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::27            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::28            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::29            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::30            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::31            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.totQLat        2937570530                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl1.dram.totBusLat      1499066800                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl1.dram.totMemAccLat  10807221330                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl1.dram.avgQLat           6529.39                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgMemAccLat     24021.39                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.readRowHits        414798                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl1.dram.writeRowHits            0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl1.dram.readRowHitRate        92.20                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl1.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl1.dram.bytesPerActivate::samples        35102                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::mean   820.283745                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::gmean   663.524637                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::stdev   339.225891                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::0-127         2641      7.52%      7.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::128-255         1753      4.99%     12.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::256-383         1271      3.62%     16.14% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::384-511         1591      4.53%     20.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::512-639         1090      3.11%     23.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::640-767         1058      3.01%     26.79% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::768-895          890      2.54%     29.33% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::896-1023          870      2.48%     31.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::1024-1151        23938     68.20%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::total        35102                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.dramBytesRead     28793600                       # Total bytes read (Byte)
board.memory.mem_ctrl1.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl1.dram.avgRdBW        575.872000                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.avgWrBW                 0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl1.dram.busUtil              3.00                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl1.dram.busUtilRead          3.00                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl1.dram.busUtilWrite         0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl1.dram.pageHitRate         92.20                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl1.dram.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.dram.rank0.actEnergy 27507392.640001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preEnergy 48561127.775997                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.readEnergy 621116533.967981                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actBackEnergy 10175770678.952814                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preBackEnergy 9295102583.155556                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.totalEnergy 24507726800.473068                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.averagePower   490.154536                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::IDLE  28267197568                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT  19485452432                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.actEnergy 27229823.712001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preEnergy 48071111.860797                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.readEnergy 612915255.791981                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.refreshEnergy 4339668483.981798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actBackEnergy 10020208050.904009                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preBackEnergy 9402496072.569942                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.totalEnergy 24450588798.819386                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.averagePower   489.011776                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::IDLE  28597651123                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::REF   2247350000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT  19154998877                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles        150150150                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.771500                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.296177                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded       396099747                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded           24                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued      349679027                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued     19662133                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined     81076365                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    219021568                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           18                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples    150109609                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     2.329491                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.499630                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     35113412     23.39%     23.39% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1      6605077      4.40%     27.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2     22271260     14.84%     42.63% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3     46039262     30.67%     73.30% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4     39989346     26.64%     99.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5        91252      0.06%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::9            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::10            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::11            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::12            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            5                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total    150109609                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu    106439279     31.50%     31.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           44      0.00%     31.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%     31.50% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd     95569175     28.29%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu          128      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%     59.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd     14058179      4.16%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     63.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult      7821775      2.32%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     66.27% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead     15265316      4.52%     70.78% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite       620970      0.18%     70.97% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead     97258962     28.79%     99.76% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite       827422      0.24%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass       175815      0.05%      0.05% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    111159527     31.79%     31.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult          201      0.00%     31.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv           15      0.00%     31.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     38496956     11.01%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu           62      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            2      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc           18      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     42.85% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     64469971     18.44%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     61.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     16189380      4.63%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     65.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead      8843894      2.53%     68.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite       905717      0.26%     68.70% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     91656281     26.21%     94.91% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     17781188      5.09%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total    349679027                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         2.328862                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy           337861250                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.966204                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.instsAddedPerPart::IQ_part_0     99687119     25.17%     25.17% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_1     99210644     25.05%     50.21% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_2     98770095     24.94%     75.15% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::IQ_part_3     98431913     24.85%    100.00% # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsAddedPerPart::total    396099771                       # Number of instructions added to each part of the IQ (includes non-spec) (Count)
board.processor.cores.core.instsInTheIQ           483                       # Number of instructions in the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_0          122     25.26%     25.26% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_1          121     25.05%     50.31% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_2          119     24.64%     74.95% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::IQ_part_3          121     25.05%    100.00% # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.instsInTheIQPerPart::total          483                       # Number of instructions in each part of the IQ (Count)
board.processor.cores.core.partIQFull::IQ_part_0            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::IQ_part_1            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::IQ_part_2            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::IQ_part_3            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQFull::total            0                       # Number of times a part of the IQ was full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_0            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_1            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_2            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::IQ_part_3            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.partIQBecomesFull::total            0                       # Number of times a part of the IQ becomes full (Count)
board.processor.cores.core.intInstQueueReads    439970470                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites    125276359                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses     84628386                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    767020573                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    351902298                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    233847433                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    191242846                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    496121616                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts       154170                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             304                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           40541                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     87085407                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     23466878                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads      3499896                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      5543853                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return          484      0.01%      0.01% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect          739      0.01%      0.01% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect           11      0.00%      0.01% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      8924014     99.73%     99.74% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond        22775      0.25%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond          154      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total      8948177                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          331      0.02%      0.02% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          591      0.03%      0.05% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect            7      0.00%      0.05% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond      1962278     99.72%     99.77% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond         4397      0.22%     99.99% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.99% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond          133      0.01%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total      1967737                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            2      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          115      0.06%      0.06% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect            4      0.00%      0.06% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond       197196     99.89%     99.95% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond           76      0.04%     99.99% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.99% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           23      0.01%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total       197416                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return          153      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect          148      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect            4      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      6961724     99.73%     99.74% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        18378      0.26%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           21      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total      6980428                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            2      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           47      0.02%      0.02% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect            4      0.00%      0.03% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond       197138     99.94%     99.97% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           36      0.02%     99.99% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.99% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           21      0.01%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total       197248                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget       403748      4.51%      4.51% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      8543947     95.48%     99.99% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS          479      0.01%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            3      0.00%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total      8948177                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch        31352     15.88%     15.88% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return       166047     84.12%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total       197399                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      8924014                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      8527401                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect       197416                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          238                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted        31363                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted       166053                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups      8948177                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates        31334                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      8644958                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.966114                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          378                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups          165                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            3                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          162                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return          484      0.01%      0.01% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect          739      0.01%      0.01% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect           11      0.00%      0.01% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      8924014     99.73%     99.74% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond        22775      0.25%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond          154      0.00%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total      8948177                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return          484      0.16%      0.16% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          169      0.06%      0.22% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect           11      0.00%      0.22% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond       302276     99.69%     99.91% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          125      0.04%     99.95% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     99.95% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond          154      0.05%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total       303219                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          115      0.37%      0.37% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.37% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond        31143     99.39%     99.76% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond           76      0.24%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total        31334                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          115      0.37%      0.37% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.37% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond        31143     99.39%     99.76% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond           76      0.24%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total        31334                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups          165                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            3                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          162                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           27                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords          192                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes         1081                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops         1082                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes          929                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used          153                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct          151                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            2                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts     81076887                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls            6                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts       197223                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples    139872393                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     2.252216                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     3.863183                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     84341832     60.30%     60.30% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     12696003      9.08%     69.38% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      7323925      5.24%     74.61% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3      1841860      1.32%     75.93% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      5578264      3.99%     79.92% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      6002811      4.29%     84.21% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      1861860      1.33%     85.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      2242465      1.60%     87.14% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8      1303726      0.93%     88.08% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::9      1729233      1.24%     89.31% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::10       968082      0.69%     90.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::11       503846      0.36%     90.36% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::12     13478486      9.64%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value           12                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total    139872393                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars            4                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls          152                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass       135855      0.04%      0.04% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    109693547     34.82%     34.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult          169      0.00%     34.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv           14      0.00%     34.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     37207058     11.81%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu           20      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            2      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc           18      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     64380336     20.44%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     67.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     16150164      5.13%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     72.24% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead      4556219      1.45%     73.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite       898450      0.29%     73.97% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     64229652     20.39%     94.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite     17771318      5.64%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total    315022822                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples     13478486                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts    194621156                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps    315022822                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP    194621156                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP    315022822                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.771500                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.296177                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     87455639                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    232048822                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    164820891                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     68785871                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     18669768                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass       135855      0.04%      0.04% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    109693547     34.82%     34.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult          169      0.00%     34.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv           14      0.00%     34.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     37207058     11.81%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu           20      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            2      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc           18      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     64380336     20.44%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     67.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     16150164      5.13%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     72.24% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead      4556219      1.45%     73.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite       898450      0.29%     73.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     64229652     20.39%     94.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite     17771318      5.64%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total    315022822                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      6980429                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      6980251                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl          178                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      6961725                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl        18704                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall          152                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn          153                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      6897095                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     97377032                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles     33188867                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles     12447334                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles       199277                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      8411540                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          195                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts    399073283                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         1120                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts    349524854                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches      6993143                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    100360211                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     18684391                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     2.327836                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numCCRegReads     34973989                       # Number of times the CC registers were read (Count)
board.processor.cores.core.executeStats0.numCCRegWrites     65120658                       # Number of times the CC registers were written (Count)
board.processor.cores.core.executeStats0.numFpRegReads    324589450                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    216103275                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads    268778218                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     69552134                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    119044602                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads    133130815                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      8544429                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles     149738529                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles       398940                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles         1056                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles            4                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.icacheWaitRetryStallCycles         2655                       # Number of stall cycles due to full MSHR (Cycle)
board.processor.cores.core.fetch.cacheLines     27836879                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          378                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples    150109609                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     2.697620                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     4.021397                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0     94724948     63.10%     63.10% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1      2398907      1.60%     64.70% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2      5261333      3.50%     68.21% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3      3613534      2.41%     70.61% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4      2454799      1.64%     72.25% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5      1330122      0.89%     73.14% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6      5808412      3.87%     77.01% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7      3215376      2.14%     79.15% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8      1154370      0.77%     79.92% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::9      3364410      2.24%     82.16% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::10     26783398     17.84%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value           10                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total    150109609                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts    249700923                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.663008                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches      8948177                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.059595                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles       167895                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles       199277                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles     10037939                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles       353330                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts    396099771                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts         1290                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     87085407                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     23466878                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           10                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ (or every part of it) has become full , causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents       353380                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents         2560                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect       166503                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect        31225                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts       197728                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit    318520696                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount    318475819                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst    254454508                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst    473585273                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        2.121049                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.537294                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.interrupts.clk_domain.clock         5328                       # Clock period in ticks (Tick)
board.processor.cores.core.lsq0.forwLoads       297774                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     18299355                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses          201                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation         2560                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores      4797066                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            7                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache       326273                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     68785870                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean    79.904682                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev   173.078152                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     47868212     69.59%     69.59% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19      3216122      4.68%     74.27% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29       901985      1.31%     75.58% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39      1570403      2.28%     77.86% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49         9510      0.01%     77.87% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59        11943      0.02%     77.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69         4270      0.01%     77.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79         4581      0.01%     77.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89        11374      0.02%     77.92% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99       175555      0.26%     78.18% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109       330890      0.48%     78.66% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119       268180      0.39%     79.05% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129       405736      0.59%     79.64% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139       740116      1.08%     80.71% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149       869030      1.26%     81.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159       836645      1.22%     83.19% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169       156352      0.23%     83.42% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179        90299      0.13%     83.55% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189        67679      0.10%     83.65% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199        66367      0.10%     83.75% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209       107347      0.16%     83.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219       195993      0.28%     84.19% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229       136347      0.20%     84.38% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239        89515      0.13%     84.52% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249        81793      0.12%     84.63% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259        98045      0.14%     84.78% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269       209105      0.30%     85.08% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279       437796      0.64%     85.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289       284961      0.41%     86.13% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299       409127      0.59%     86.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows      9130592     13.27%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         8269                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     68785870                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.rdAccesses     70024531                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrAccesses     18684391                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.dtb.rdMisses        51945                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.dtb.wrMisses         5781                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.rdAccesses            0                       # TLB accesses on read requests (Count)
board.processor.cores.core.mmu.itb.wrAccesses     27836880                       # TLB accesses on write requests (Count)
board.processor.cores.core.mmu.itb.rdMisses            0                       # TLB misses on read requests (Count)
board.processor.cores.core.mmu.itb.wrMisses            5                       # TLB misses on write requests (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 491493394004                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles       199277                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles     11177684                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles     71041468                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles            0                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles     38468642                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles     29222534                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts    397578100                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents     15369155                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.SQFullEvents      8337560                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands    567578854                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   1107702654                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups    285009877                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    406958790                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps    449276832                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    118301296                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing            0                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing            0                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts     92199859                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads        522493616                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes       802437614                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts    194621156                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps    315022822                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
